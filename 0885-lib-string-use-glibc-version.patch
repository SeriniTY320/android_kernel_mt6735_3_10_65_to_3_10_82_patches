From b9e69d19718fdbafa2c4bc1dee2a02046935ae9a Mon Sep 17 00:00:00 2001
From: DooMLoRD <metoo.mememe@gmail.com>
Date: Wed, 30 Apr 2014 20:16:48 +0530
Subject: [PATCH 0885/1168] lib/string: use glibc version

the performance of memcpy and memmove of the general version is very
inefficient, this patch improved them.

Signed-off-by: Miao Xie <miaox*******>
Signed-off-by: faux123 <reioux@gmail.com>
Signed-off-by: Stefan Guendhoer <stefan@guendhoer.com>

Former-commit-id: 5f74313b219e3afd261fc6e799cd3efaf618112b
---
 lib/string.c | 29 ++++++++++++-----------------
 1 file changed, 12 insertions(+), 17 deletions(-)

diff --git a/lib/string.c b/lib/string.c
index cb9ea21..517f9f3 100644
--- a/lib/string.c
+++ b/lib/string.c
@@ -26,6 +26,7 @@
 #include <linux/export.h>
 #include <linux/bug.h>
 #include <linux/errno.h>
+#include <linux/memcopy.h>
 
 #ifndef __HAVE_ARCH_STRNICMP
 /**
@@ -614,11 +615,11 @@ EXPORT_SYMBOL(memzero_explicit);
  */
 void *memcpy(void *dest, const void *src, size_t count)
 {
-	char *tmp = dest;
-	const char *s = src;
+	unsigned long dstp = (unsigned long)dest;
+	unsigned long srcp = (unsigned long)src;
 
-	while (count--)
-		*tmp++ = *s++;
+	/* Copy from the beginning to the end */
+	mem_copy_fwd(dstp, srcp, count);
 	return dest;
 }
 EXPORT_SYMBOL(memcpy);
@@ -635,21 +636,15 @@ EXPORT_SYMBOL(memcpy);
  */
 void *memmove(void *dest, const void *src, size_t count)
 {
-	char *tmp;
-	const char *s;
+	unsigned long dstp = (unsigned long)dest;
+	unsigned long srcp = (unsigned long)src;
 
-	if (dest <= src) {
-		tmp = dest;
-		s = src;
-		while (count--)
-			*tmp++ = *s++;
+	if (dest - src >= count) {
+		/* Copy from the beginning to the end */
+		mem_copy_fwd(dstp, srcp, count);
 	} else {
-		tmp = dest;
-		tmp += count;
-		s = src;
-		s += count;
-		while (count--)
-			*--tmp = *--s;
+		/* Copy from the end to the beginning */
+		mem_copy_bwd(dstp, srcp, count);
 	}
 	return dest;
 }
-- 
2.7.4

