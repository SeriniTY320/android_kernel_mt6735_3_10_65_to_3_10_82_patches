From 2554607b99ef71f666974f03b9a0ad4b8bab54f0 Mon Sep 17 00:00:00 2001
From: Stefan Guendhoer <stefan@guendhoer.com>
Date: Thu, 7 Jan 2016 22:12:48 +0000
Subject: [PATCH 0905/1168] sched/rt: Reduce rq lock contention by eliminating
 locking of non-feasible target

Former-commit-id: 5054bfb020c75109b6f79d2971ea92abd745f276
---
 kernel/sched/rt.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/kernel/sched/rt.c b/kernel/sched/rt.c
index fb78926..692fb1e 100644
--- a/kernel/sched/rt.c
+++ b/kernel/sched/rt.c
@@ -2290,6 +2290,16 @@ static struct rq *find_lock_lowest_rq_mtk(struct task_struct *task, struct rq *r
 
 	lowest_rq = cpu_rq(cpu);
 
+	if (lowest_rq->rt.highest_prio.curr <= task->prio) {
+		/*
+		 * Target rq has tasks of equal or higher priority,
+		 * retrying does not release any lock and is unlikely
+		 * to yield a different result.
+		 */
+		lowest_rq = NULL;
+		break;
+	}
+
 	/* if the prio of this runqueue changed, try again */
 	if (double_lock_balance(rq, lowest_rq)) {
 		/*
-- 
2.7.4

