From 8b7c94a1631e91849864317548b16ebe971990d5 Mon Sep 17 00:00:00 2001
From: olegsvs <oleg.texet@gmail.com>
Date: Sun, 8 May 2016 11:59:19 +0300
Subject: [PATCH 010/117] collect

---
 drivers/input/touchscreen/Kconfig                  |    4 +
 .../jd9365_6735_dsi_video/jd9365_6735_dsi_video.c  |    1 -
 .../rm68200_6735_dsi_video.c                       | 1332 +++++++++++++-------
 include/config/auto.conf                           |    1 +
 include/config/touchscreen/mtk/ft6206/x2605.h      |    0
 include/generated/autoconf.h                       |    1 +
 include/generated/compile.h                        |    4 +-
 7 files changed, 900 insertions(+), 443 deletions(-)
 create mode 100644 include/config/touchscreen/mtk/ft6206/x2605.h

diff --git a/drivers/input/touchscreen/Kconfig b/drivers/input/touchscreen/Kconfig
index 9884cf4..f46ba53 100755
--- a/drivers/input/touchscreen/Kconfig
+++ b/drivers/input/touchscreen/Kconfig
@@ -66,6 +66,10 @@ config TOUCHSCREEN_AD7879
 	  To compile this driver as a module, choose M here: the
 	  module will be called ad7879.
 
+config TOUCHSCREEN_MTK_FT6206_X2605
+	bool "FT6206_X2605 for Mediatek package"
+	depends on TOUCHSCREEN_MTK
+
 config TOUCHSCREEN_AD7879_I2C
 	tristate "support I2C bus connection"
 	depends on TOUCHSCREEN_AD7879 && I2C
diff --git a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
index 0d9ac89..a360016 100644
--- a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
+++ b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
@@ -155,7 +155,6 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 {0xE3,1,{0xF8}},
 
 //--- Sequence Ctrl ----//
-
 //{0x80,1,{0x02}},
 
 //--- Page1  ----//
diff --git a/drivers/misc/mediatek/lcm/rm68200_6735_dsi_video/rm68200_6735_dsi_video.c b/drivers/misc/mediatek/lcm/rm68200_6735_dsi_video/rm68200_6735_dsi_video.c
index 3e480e8..5446e57 100644
--- a/drivers/misc/mediatek/lcm/rm68200_6735_dsi_video/rm68200_6735_dsi_video.c
+++ b/drivers/misc/mediatek/lcm/rm68200_6735_dsi_video/rm68200_6735_dsi_video.c
@@ -1,27 +1,113 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein
+ * is confidential and proprietary to MediaTek Inc. and/or its licensors.
+ * Without the prior written permission of MediaTek inc. and/or its licensors,
+ * any reproduction, modification, use or disclosure of MediaTek Software,
+ * and information contained herein, in whole or in part, shall be strictly prohibited.
+ */
+/* MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
+ * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+ * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+ * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+ * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
+ * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
+ * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
+ * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
+ * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
+ * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+ * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+ * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
+ * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek Software")
+ * have been modified by MediaTek Inc. All revisions are subject to any receiver's
+ * applicable license agreements with MediaTek Inc.
+ */
+
+/*****************************************************************************
+*  Copyright Statement:
+*  --------------------
+*  This software is protected by Copyright and the information contained
+*  herein is confidential. The software may not be copied and the information
+*  contained herein may not be used or disclosed except with the written
+*  permission of MediaTek Inc. (C) 2008
+*
+*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
+*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
+*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
+*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
+*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
+*
+*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
+*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
+*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+*
+*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
+*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
+*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
+*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
+*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
+*
+*****************************************************************************/
+
+
 #ifdef BUILD_LK
-	#include <platform/mt_gpio.h>
-	#include <string.h>
-#elif defined(BUILD_UBOOT)
-	#include <asm/arch/mt_gpio.h>
 #else
-	#include <mach/mt_gpio.h>
+#include <linux/string.h>
+#if defined(BUILD_UBOOT)
+#include <asm/arch/mt_gpio.h>
+#else
+#include <mach/mt_gpio.h>
+#endif
 #endif
-
 #include "lcm_drv.h"
 
+#if defined(BUILD_LK)
+#else
+
+#include <linux/proc_fs.h>   //proc file use 
+#endif
+
+
 // ---------------------------------------------------------------------------
 //  Local Constants
 // ---------------------------------------------------------------------------
 
-#define FRAME_WIDTH  				(720)
-#define FRAME_HEIGHT 				(1280)
+#define FRAME_WIDTH  										(720)
+#define FRAME_HEIGHT 										(1280)
+#define LCM_ID                       						(0x1284)
 
-#define REGFLAG_DELAY             		0X1FE
-#define REGFLAG_END_OF_TABLE      		0x1FD   // END OF REGISTERS MARKER
+#define REGFLAG_DELAY             							(0XFFFE)
+#define REGFLAG_END_OF_TABLE      							(0xF100)	// END OF REGISTERS MARKER
 
-#define LCM_DSI_CMD_MODE			0
 
-#define LCM_IC_ID 0x6820 
+#define LCM_DSI_CMD_MODE									0
+
+#ifndef TRUE
+    #define TRUE 1
+#endif
+
+#ifndef FALSE
+    #define FALSE 0
+#endif
 
 // ---------------------------------------------------------------------------
 //  Local Variables
@@ -29,23 +115,14 @@
 
 static LCM_UTIL_FUNCS lcm_util = {0};
 
-#define SET_RESET_PIN(v)  				(lcm_util.set_reset_pin((v)))
-#define SET_RESET_PIN(v)   				(lcm_util.set_reset_pin((v)))
-#define SET_GPIO_OUT(n, v) 				(lcm_util.set_gpio_out((n), (v)))
-#define read_reg_v2(cmd, buffer, buffer_size)  		lcm_util.dsi_dcs_read_lcm_reg_v2(cmd, buffer, buffer_size)
+#define SET_RESET_PIN(v)    								(lcm_util.set_reset_pin((v)))
 
-#define UDELAY(n) 					(lcm_util.udelay(n))
-#define MDELAY(n) 					(lcm_util.mdelay(n))
+#define UDELAY(n) 											(lcm_util.udelay(n))
+#define MDELAY(n) 											(lcm_util.mdelay(n))
 
-#define PFX "[RM68200]"
+#define LCM_RM68200_ID 		(0x8200)
 
-#if defined(BUILD_UBOOT)
-	#define print(fmt, arg...)         printf(PFX "uboot %s: " fmt, __FUNCTION__ ,##arg)
-#elif defined(BUILD_LK)
-	#define print(fmt, arg...)         printf(PFX "lk %s: " fmt, __FUNCTION__ ,##arg)
-#else
-	#define print(fmt, arg...)         printk(PFX "kernel %s: " fmt, __FUNCTION__ ,##arg)
-#endif
+static unsigned int lcm_esd_test = FALSE;      ///only for ESD test
 
 // ---------------------------------------------------------------------------
 //  Local Functions
@@ -53,347 +130,643 @@ static LCM_UTIL_FUNCS lcm_util = {0};
 
 #define dsi_set_cmdq_V2(cmd, count, ppara, force_update)	lcm_util.dsi_set_cmdq_V2(cmd, count, ppara, force_update)
 #define dsi_set_cmdq(pdata, queue_size, force_update)		lcm_util.dsi_set_cmdq(pdata, queue_size, force_update)
-#define wrtie_cmd(cmd)						lcm_util.dsi_write_cmd(cmd)
-#define write_regs(addr, pdata, byte_nums)	        	lcm_util.dsi_write_regs(addr, pdata, byte_nums)
-#define read_reg						lcm_util.dsi_read_reg()
+#define wrtie_cmd(cmd)										lcm_util.dsi_write_cmd(cmd)
+#define write_regs(addr, pdata, byte_nums)					lcm_util.dsi_write_regs(addr, pdata, byte_nums)
+#define read_reg(cmd)											lcm_util.dsi_dcs_read_lcm_reg(cmd)
+#define read_reg_v2(cmd, buffer, buffer_size)				lcm_util.dsi_dcs_read_lcm_reg_v2(cmd, buffer, buffer_size)
 
-static struct LCM_setting_table {
+ struct LCM_setting_table {
     unsigned cmd;
     unsigned char count;
     unsigned char para_list[64];
 };
 
 
-static struct LCM_setting_table lcm_initialization_setting_FC_BOE[]=
-{
+static struct LCM_setting_table lcm_initialization_setting[] = {
 
-	{0xFE,1,{0x01}},
-	{0x01,1,{0x08}},//VBP
-	{0x24,1,{0xC0}},
-	{0x25,1,{0x51}},
-	{0x27,1,{0x0A}},
-	{0x29,1,{0x0A}},
-	{0x2B,1,{0xC5}},
-	{0x16,1,{0x52}},
-	{0x2F,1,{0x53}},
-	{0x34,1,{0x5A}},
-	{0x1B,1,{0x50}},//Z inversion
-	{0x12,1,{0x0A}},
-	{0x5F,1,{0x12}},// lanes
-	{0x0E,1,{0x27}},
-	{0x1A,1,{0x06}},
-	{0x46,1,{0x4F}},//VCOM - flicker
-	{0x52,1,{0xA0}},// dui bi
-	{0x53,1,{0x00}},
-	{0x54,1,{0xA0}},// dui bi
-	{0x55,1,{0x00}},
-
-	{0xFE,1,{0x03}},
-	{0x00,1,{0x05}},
-	{0x01,1,{0x16}},   
-	{0x02,1,{0x01}},    
-	{0x03,1,{0x05}},    
-	{0x04,1,{0x7D}},   
-	{0x05,1,{0x00}},   
-	{0x06,1,{0x50}},    
-	{0x07,1,{0x05}},    
-	{0x08,1,{0x16}},    
-	{0x09,1,{0x03}},    
-	{0x0A,1,{0x07}},    
-	{0x0B,1,{0x7D}},    
-	{0x0C,1,{0x00}},   
-	{0x0D,1,{0x50}},   
-	{0x0E,1,{0x05}},   
-	{0x0F,1,{0x06}},    
-	{0x10,1,{0x07}},    
-	{0x11,1,{0x08}},    
-	{0x12,1,{0x00}},   
-	{0x13,1,{0x7D}},   
-	{0x14,1,{0x00}},    
-	{0x15,1,{0x85}},    
-	{0x16,1,{0x08}},   
-	{0x17,1,{0x09}},   
-	{0x18,1,{0x0A}},   
-	{0x19,1,{0x0B}},  
-	{0x1A,1,{0x0C}},   
-	{0x1B,1,{0x00}},
-	{0x1C,1,{0x7D}}, 
-	{0x1D,1,{0x00}},    
-	{0x1E,1,{0x85}},    
-	{0x1F,1,{0x08}},    
-	{0x20,1,{0x00}},    
-	{0x21,1,{0x00}},   
-	{0x22,1,{0x00}},    
-	{0x23,1,{0x00}},    
-	{0x24,1,{0x00}},    
-	{0x25,1,{0x00}},   
-	{0x26,1,{0x00}},    
-	{0x27,1,{0x00}},   
-	{0x28,1,{0x00}},    
-	{0x29,1,{0x00}},    
-	{0x2A,1,{0x05}},    
-	{0x2B,1,{0x06}},    
-	{0x2D,1,{0x07}},    
-	{0x2F,1,{0x08}},    
-	{0x30,1,{0x00}},    
-	{0x31,1,{0x40}},    
-	{0x32,1,{0x05}},    
-	{0x33,1,{0x08}},   
-	{0x34,1,{0x54}},   
-	{0x35,1,{0x7D}},    
-	{0x36,1,{0x00}},   
-	{0x37,1,{0x09}},    
-	{0x38,1,{0x0A}},    
-	{0x39,1,{0x0B}},    
-	{0x3A,1,{0x0C}},    
-	{0x3B,1,{0x00}},    
-	{0x3D,1,{0x40}},    
-	{0x3F,1,{0x05}},    
-	{0x40,1,{0x08}},    
-	{0x41,1,{0x54}},   
-	{0x42,1,{0x7D}},   
-	{0x43,1,{0x00}},    
-	{0x44,1,{0x00}},   
-	{0x45,1,{0x00}},    
-	{0x46,1,{0x00}},    
-	{0x47,1,{0x00}},   
-	{0x48,1,{0x00}},    
-	{0x49,1,{0x00}},   
-	{0x4A,1,{0x00}},    
-	{0x4B,1,{0x00}},    
-	{0x4C,1,{0x00}},   
-	{0x4D,1,{0x00}},    
-	{0x4E,1,{0x00}},    
-	{0x4F,1,{0x00}},   
-	{0x50,1,{0x00}},    
-	{0x51,1,{0x00}},   
-	{0x52,1,{0x00}},   
-	{0x53,1,{0x00}},   
-	{0x54,1,{0x00}},   
-	{0x55,1,{0x00}},    
-	{0x56,1,{0x00}},    
-	{0x58,1,{0x00}},    
-	{0x59,1,{0x00}},    
-	{0x5A,1,{0x00}},    
-	{0x5B,1,{0x00}},    
-	{0x5C,1,{0x00}},    
-	{0x5D,1,{0x00}},    
-	{0x5E,1,{0x00}},    
-	{0x5F,1,{0x00}},   
-	{0x60,1,{0x00}},    
-	{0x61,1,{0x00}},    
-	{0x62,1,{0x00}},   
-	{0x63,1,{0x00}},   
-	{0x64,1,{0x00}},   
-	{0x65,1,{0x00}},   
-	{0x66,1,{0x00}},   
-	{0x67,1,{0x00}},    
-	{0x68,1,{0x00}},    
-	{0x69,1,{0x00}},    
-	{0x6A,1,{0x00}},    
-	{0x6B,1,{0x00}},    
-	{0x6C,1,{0x00}},    
-	{0x6D,1,{0x00}},    
-	{0x6E,1,{0x00}},   
-	{0x6F,1,{0x00}},   
-	{0x70,1,{0x00}},  
-	{0x71,1,{0x00}},   
-	{0x72,1,{0x20}},   
-	{0x73,1,{0x00}},  
-	{0x74,1,{0x08}},   
-	{0x75,1,{0x08}},   
-	{0x76,1,{0x08}},   
-	{0x77,1,{0x08}},   
-	{0x78,1,{0x08}},    
-	{0x79,1,{0x08}},   
-	{0x7A,1,{0x00}},    
-	{0x7B,1,{0x00}},   
-	{0x7C,1,{0x00}},   
-	{0x7D,1,{0x00}},    
-	{0x7E,1,{0xBF}},    
-	{0x7F,1,{0x3F}},    
-	{0x80,1,{0x3F}},    
-	{0x81,1,{0x3F}},    
-	{0x82,1,{0x3F}},   
-	{0x83,1,{0x3F}},   
-	{0x84,1,{0x3F}},    
-	{0x85,1,{0x02}},    
-	{0x86,1,{0x06}},   
-	{0x87,1,{0x3F}},    
-	{0x88,1,{0x08}},    
-	{0x89,1,{0x0C}},   
-	{0x8A,1,{0x0A}},    
-	{0x8B,1,{0x0E}},   
-	{0x8C,1,{0x14}},   
-	{0x8D,1,{0x10}},   
-	{0x8E,1,{0x16}},   
-	{0x8F,1,{0x12}},   
-	{0x90,1,{0x00}},   
-	{0x91,1,{0x04}},   
-	{0x92,1,{0x3F}},    
-	{0x93,1,{0x3F}},   
-	{0x94,1,{0x3F}},    
-	{0x95,1,{0x3F}},    
-	{0x96,1,{0x05}},   
-	{0x97,1,{0x01}},    
-	{0x98,1,{0x13}},    
-	{0x99,1,{0x17}},    
-	{0x9A,1,{0x11}},    
-	{0x9B,1,{0x15}},    
-	{0x9C,1,{0x0F}},   
-	{0x9D,1,{0x0B}},   
-	{0x9E,1,{0x0D}},    
-	{0x9F,1,{0x09}},    
-	{0xA0,1,{0x3F}},    
-	{0xA2,1,{0x07}},    
-	{0xA3,1,{0x03}},    
-	{0xA4,1,{0x3F}},    
-	{0xA5,1,{0x3F}},    
-	{0xA6,1,{0x3F}},    
-	{0xA7,1,{0x3F}},   
-	{0xA9,1,{0x3F}},    
-	{0xAA,1,{0x3F}},    
-	{0xAB,1,{0x3F}},    
-	{0xAC,1,{0x3F}},    
-	{0xAD,1,{0x3F}},   
-	{0xAE,1,{0x3F}},    
-	{0xAF,1,{0x3F}},    
-	{0xB0,1,{0x3F}},    
-	{0xB1,1,{0x3F}},    
-	{0xB2,1,{0x3F}},    
-	{0xB3,1,{0x05}},   
-	{0xB4,1,{0x01}},   
-	{0xB5,1,{0x3F}},   
-	{0xB6,1,{0x0F}},   
-	{0xB7,1,{0x0B}},   
-	{0xB8,1,{0x0D}},    
-	{0xB9,1,{0x09}},    
-	{0xBA,1,{0x17}},    
-	{0xBB,1,{0x13}},    
-	{0xBC,1,{0x15}},    
-	{0xBD,1,{0x11}},    
-	{0xBE,1,{0x07}},    
-	{0xBF,1,{0x03}},    
-	{0xC0,1,{0x3F}},    
-	{0xC1,1,{0x3F}},    
-	{0xC2,1,{0x3F}},    
-	{0xC3,1,{0x3F}},    
-	{0xC4,1,{0x02}},    
-	{0xC5,1,{0x06}},    
-	{0xC6,1,{0x10}},   
-	{0xC7,1,{0x14}},   
-	{0xC8,1,{0x12}},   
-	{0xC9,1,{0x16}},    
-	{0xCA,1,{0x08}},   
-	{0xCB,1,{0x0C}},    
-	{0xCC,1,{0x0A}},    
-	{0xCD,1,{0x0E}},    
-	{0xCE,1,{0x3F}},   
-	{0xCF,1,{0x00}},    
-	{0xD0,1,{0x04}},    
-	{0xD1,1,{0x3F}},    
-	{0xD2,1,{0x3F}},    
-	{0xD3,1,{0x3F}},    
-	{0xD4,1,{0x3F}},   
-	{0xD5,1,{0x3F}},    
-	{0xD6,1,{0x3F}},    
-	{0xD7,1,{0x3F}},
-
-	{0xFE,1,{0x04}},
-	{0x60,1,{0x00}},
-	{0x61,1,{0x09}},
-	{0x62,1,{0x0F}},
-	{0x63,1,{0x0D}},
-	{0x64,1,{0x05}},
-	{0x65,1,{0x13}},
-	{0x66,1,{0x0E}},
-	{0x67,1,{0x0A}},
-	{0x68,1,{0x16}},
-	{0x69,1,{0x0B}},
-	{0x6A,1,{0x0E}},
-	{0x6B,1,{0x06}},
-	{0x6C,1,{0x0D}},
-	{0x6D,1,{0x13}},
-	{0x6E,1,{0x0E}},
-	{0x6F,1,{0x00}},
-	{0x70,1,{0x00}},
-	{0x71,1,{0x0E}},
-	{0x72,1,{0x13}},
-	{0x73,1,{0x0A}},
-	{0x74,1,{0x05}},
-	{0x75,1,{0x11}},
-	{0x76,1,{0x0E}},
-	{0x77,1,{0x0A}},
-	{0x78,1,{0x17}},
-	{0x79,1,{0x0D}},
-	{0x7A,1,{0x0E}},
-	{0x7B,1,{0x06}},
-	{0x7C,1,{0x0D}},
-	{0x7D,1,{0x13}},
-	{0x7E,1,{0x0E}},
-	{0x7F,1,{0x00}},
-	{0xFE,1,{0x00}},
-	{0x36,1,{0x03}},
-	{0x11, 0,{0x00}},
-
-	{REGFLAG_DELAY, 200, {}},
-
-	{0x29, 0,{0x00}},
-
-	{REGFLAG_DELAY, 200, {}},
-};
+	/*
+Note :
 
-static struct LCM_setting_table lcm_set_window[] = {
-	{0x2A,	4,	{0x00, 0x00, (FRAME_WIDTH>>8), (FRAME_WIDTH&0xFF)}},
-	{0x2B,	4,	{0x00, 0x00, (FRAME_HEIGHT>>8), (FRAME_HEIGHT&0xFF)}},
-	{REGFLAG_END_OF_TABLE, 0x00, {}}
+Data ID will depends on the following rule.
+
+count of parameters > 1      => Data ID = 0x39
+count of parameters = 1      => Data ID = 0x15
+count of parameters = 0      => Data ID = 0x05
+
+Struclcm_deep_sleep_mode_in_settingture Format :
+
+{DCS command, count of parameters, {parameter list}}
+{REGFLAG_DELAY, milliseconds of time, {}},
+
+...
+
+Setting ending by predefined flag
+
+{REGFLAG_END_OF_TABLE, 0x00, {}}
+*/
+
+/**************************************************
+IC Name: RM68200
+Panel Maker/Size: INL499
+Panel Product No.: F050A13-603
+Version: V0
+Date: 20140819
+**************************************************/
+
+
+{0xFE, 1,{0x01}},
+
+{0x00, 1,{0x0A}},
+
+{0x01, 1,{0x08}},
+
+{0x2B, 1,{0xC5}},
+
+{0x16, 1,{0x52}},
+
+{0x27, 1,{0x0C}},
+
+{0x29, 1,{0x0C}},
+
+{0x2F, 1,{0x6A}},
+
+{0x34, 1,{0x55}},
+
+{0x1B, 1,{0x00}},
+
+{0x12, 1,{0x08}},
+
+{0x1A, 1,{0x06}},
+
+{0x46, 1,{0x5A}},
+
+{0x52, 1,{0x95}},
+
+{0x53, 1,{0x00}},
+
+{0x54, 1,{0x95}},
+
+{0x55, 1,{0x00}},
+
+
+{0xFE, 1,{0x03}},
+
+{0x00, 1,{0x05}},
+
+{0x01, 1,{0x16}},
+
+{0x02, 1,{0x01}},
+
+{0x03, 1,{0x04}},
+
+{0x04, 1,{0x00}},
+
+{0x05, 1,{0x00}},
+
+{0x06, 1,{0x50}},
+
+{0x07, 1,{0x05}},
+
+{0x08, 1,{0x16}},
+
+{0x09, 1,{0x01}},
+
+{0x0A, 1,{0x08}},
+
+{0x0B, 1,{0x00}},
+
+{0x0C, 1,{0x00}},
+
+{0x0D, 1,{0x50}},
+
+{0x0E, 1,{0x03}},
+
+{0x0F, 1,{0x04}},
+
+{0x10, 1,{0x05}},
+
+{0x11, 1,{0x06}},
+
+{0x12, 1,{0x00}},
+
+{0x13, 1,{0x40}},
+
+{0x14, 1,{0x00}},
+
+{0x15, 1,{0xC5}},
+
+{0x16, 1,{0x0C}},
+
+{0x17, 1,{0x07}},
+
+{0x18, 1,{0x08}},
+
+{0x19, 1,{0x09}},
+
+{0x1A, 1,{0x0A}},
+
+{0x1B, 1,{0x00}},
+
+{0x1C, 1,{0x40}},
+
+{0x1D, 1,{0x00}},
+
+{0x1E, 1,{0x85}},
+
+{0x1F, 1,{0x0C}},
+
+{0x20, 1,{0x00}},
+
+{0x21, 1,{0x00}},
+
+{0x22, 1,{0x03}},
+
+{0x23, 1,{0x0A}},
+
+{0x24, 1,{0x0C}},
+
+{0x25, 1,{0x2D}},
+
+{0x26, 1,{0x00}},
+
+{0x27, 1,{0x0E}},
+
+{0x28, 1,{0x10}},
+
+{0x29, 1,{0x2D}},
+
+{0x2A, 1,{0x0B}},
+
+{0x2B, 1,{0x0C}},
+
+{0x2D, 1,{0x0D}},
+
+{0x2F, 1,{0x0E}},
+
+{0x30, 1,{0x00}},
+
+{0x31, 1,{0x40}},
+
+{0x32, 1,{0x05}},
+
+{0x33, 1,{0x0C}},
+
+{0x34, 1,{0x40}},
+
+{0x35, 1,{0x00}},
+
+{0x36, 1,{0x00}},
+
+{0x37, 1,{0x00}},
+
+{0x38, 1,{0x00}},
+
+{0x39, 1,{0x00}},
+
+{0x3A, 1,{0x00}},
+
+{0x3B, 1,{0x00}},
+
+{0x3D, 1,{0x00}},
+
+{0x3F, 1,{0x00}},
+
+{0x40, 1,{0x00}},
+
+{0x41, 1,{0x00}},
+
+{0x42, 1,{0x00}},
+
+{0x43, 1,{0x00}},
+
+{0x44, 1,{0x00}},
+
+{0x45, 1,{0x00}},
+
+{0x46, 1,{0x00}},
+
+{0x47, 1,{0x00}},
+
+{0x48, 1,{0x00}},
+
+{0x49, 1,{0x00}},
+
+{0x4A, 1,{0x00}},
+
+{0x4B, 1,{0x00}},
+
+{0x4C, 1,{0x00}},
+
+{0x4D, 1,{0x00}},
+
+{0x4E, 1,{0x00}},
+
+{0x4F, 1,{0x00}},
+
+{0x50, 1,{0x00}},
+
+{0x51, 1,{0x00}},
+
+{0x52, 1,{0x00}},
+
+{0x53, 1,{0x00}},
+
+{0x54, 1,{0x00}},
+
+{0x55, 1,{0x00}},
+
+{0x56, 1,{0x00}},
+
+{0x58, 1,{0x00}},
+
+{0x59, 1,{0x00}},
+
+{0x5A, 1,{0x00}},
+
+{0x5B, 1,{0x00}},
+
+{0x5C, 1,{0x00}},
+
+{0x5D, 1,{0x00}},
+
+{0x5E, 1,{0x00}},
+
+{0x5F, 1,{0x00}},
+
+{0x60, 1,{0x0B}},
+
+{0x61, 1,{0x00}},
+
+{0x62, 1,{0x80}},
+
+{0x63, 1,{0x12}},
+
+{0x64, 1,{0x14}},
+
+{0x65, 1,{0x00}},
+
+{0x66, 1,{0x00}},
+
+{0x67, 1,{0x55}},
+
+{0x68, 1,{0x00}},
+
+{0x69, 1,{0x00}},
+
+{0x6A, 1,{0x00}},
+
+{0x6B, 1,{0x00}},
+
+{0x6C, 1,{0x00}},
+
+{0x6D, 1,{0xBC}},
+
+{0x6E, 1,{0x00}},
+
+{0x6F, 1,{0x00}},
+
+{0x70, 1,{0x00}},
+
+{0x71, 1,{0x80}},
+
+{0x72, 1,{0x00}},
+
+{0x73, 1,{0x00}},
+
+{0x74, 1,{0x01}},
+
+{0x75, 1,{0x01}},
+
+{0x76, 1,{0x01}},
+
+{0x77, 1,{0x01}},
+
+{0x78, 1,{0x01}},
+
+{0x79, 1,{0x01}},
+
+{0x7A, 1,{0x00}},
+
+{0x7B, 1,{0x00}},
+
+{0x7C, 1,{0x00}},
+
+{0x7D, 1,{0x00}},
+
+{0x7E, 1,{0x18}},
+
+{0x7F, 1,{0x19}},
+
+{0x80, 1,{0x09}},
+
+{0x81, 1,{0x0B}},
+
+{0x82, 1,{0x0D}},
+
+{0x83, 1,{0x0F}},
+
+{0x84, 1,{0x11}},
+
+{0x85, 1,{0x13}},
+
+{0x86, 1,{0x03}},
+
+{0x87, 1,{0x3F}},
+
+{0x88, 1,{0x07}},
+
+{0x89, 1,{0x3F}},
+
+{0x8A, 1,{0x1C}},
+
+{0x8B, 1,{0x3F}},
+
+{0x8C, 1,{0x3F}},
+
+{0x8D, 1,{0x1C}},
+
+{0x8E, 1,{0x1C}},
+
+{0x8F, 1,{0x1C}},
+
+{0x90, 1,{0x3F}},
+
+{0x91, 1,{0x01}},
+
+{0x92, 1,{0x3F}},
+
+{0x93, 1,{0x3F}},
+
+{0x94, 1,{0x3F}},
+
+{0x95, 1,{0x3F}},
+
+{0x96, 1,{0x00}},
+
+{0x97, 1,{0x3F}},
+
+{0x98, 1,{0x1C}},
+
+{0x99, 1,{0x1C}},
+
+{0x9A, 1,{0x1C}},
+
+{0x9B, 1,{0x3F}},
+
+{0x9C, 1,{0x3F}},
+
+{0x9D, 1,{0x1C}},
+
+{0x9E, 1,{0x3F}},
+
+{0x9F, 1,{0x06}},
+
+{0xA0, 1,{0x3F}},
+
+{0xA2, 1,{0x02}},
+
+{0xA3, 1,{0x12}},
+
+{0xA4, 1,{0x10}},
+
+{0xA5, 1,{0x0E}},
+
+{0xA6, 1,{0x0C}},
+
+{0xA7, 1,{0x0A}},
+
+{0xA9, 1,{0x08}},
+
+{0xAA, 1,{0x19}},
+
+{0xAB, 1,{0x18}},
+
+{0xAC, 1,{0x18}},
+
+{0xAD, 1,{0x19}},
+
+{0xAE, 1,{0x12}},
+
+{0xAF, 1,{0x10}},
+
+{0xB0, 1,{0x0E}},
+
+{0xB1, 1,{0x0C}},
+
+{0xB2, 1,{0x0A}},
+
+{0xB3, 1,{0x08}},
+
+{0xB4, 1,{0x00}},
+
+{0xB5, 1,{0x3F}},
+
+{0xB6, 1,{0x06}},
+
+{0xB7, 1,{0x3F}},
+
+{0xB8, 1,{0x1C}},
+
+{0xB9, 1,{0x3F}},
+
+{0xBA, 1,{0x3F}},
+
+{0xBB, 1,{0x1C}},
+
+{0xBC, 1,{0x1C}},
+
+{0xBD, 1,{0x1C}},
+
+{0xBE, 1,{0x3F}},
+
+{0xBF, 1,{0x02}},
+
+{0xC0, 1,{0x3F}},
+
+{0xC1, 1,{0x3F}},
+
+{0xC2, 1,{0x3F}},
+
+{0xC3, 1,{0x3F}},
+
+{0xC4, 1,{0x03}},
+
+{0xC5, 1,{0x3F}},
+
+{0xC6, 1,{0x1C}},
+
+{0xC7, 1,{0x1C}},
+
+{0xC8, 1,{0x1C}},
+
+{0xC9, 1,{0x3F}},
+
+{0xCA, 1,{0x3F}},
+
+{0xCB, 1,{0x1C}},
+
+{0xCC, 1,{0x3F}},
+
+{0xCD, 1,{0x07}},
+
+{0xCE, 1,{0x3F}},
+
+{0xCF, 1,{0x01}},
+
+{0xD0, 1,{0x09}},
+
+{0xD1, 1,{0x0B}},
+
+{0xD2, 1,{0x0D}},
+
+{0xD3, 1,{0x0F}},
+
+{0xD4, 1,{0x11}},
+
+{0xD5, 1,{0x13}},
+
+{0xD6, 1,{0x19}},
+
+{0xD7, 1,{0x18}},
+
+{0xDF, 1,{0x00}},
+
+{0xFE, 1,{0x04}},
+
+{0x60, 1,{0x00}},
+
+{0x61, 1,{0x10}},
+
+{0x62, 1,{0x16}},
+
+{0x63, 1,{0x0F}},
+
+{0x64, 1,{0x06}},
+
+{0x65, 1,{0x13}},
+
+{0x66, 1,{0x0F}},
+
+{0x67, 1,{0x0B}},
+
+{0x68, 1,{0x16}},
+
+{0x69, 1,{0x0C}},
+
+{0x6A, 1,{0x10}},
+
+{0x6B, 1,{0x07}},
+
+{0x6C, 1,{0x0F}},
+
+{0x6D, 1,{0x15}},
+
+{0x6E, 1,{0x0F}},
+
+{0x6F, 1,{0x00}},
+
+{0x70, 1,{0x00}},
+
+{0x71, 1,{0x10}},
+
+{0x72, 1,{0x16}},
+
+{0x73, 1,{0x0F}},
+
+{0x74, 1,{0x06}},
+
+{0x75, 1,{0x13}},
+
+{0x76, 1,{0x0F}},
+
+{0x77, 1,{0x0B}},
+
+{0x78, 1,{0x16}},
+
+{0x79, 1,{0x0C}},
+
+{0x7A, 1,{0x10}},
+
+{0x7B, 1,{0x07}},
+
+{0x7C, 1,{0x0F}},
+
+{0x7D, 1,{0x15}},
+
+{0x7E, 1,{0x0F}},
+
+{0x7F, 1,{0x00}},
+
+{0xFE, 1,{0x00}},
+
+{0x58, 1,{0xA9}},
+
+{REGFLAG_DELAY, 120, {}},
+
+{0x11, 0,{0x00}},
+
+{REGFLAG_DELAY, 100, {}},
+
+{0x29, 0,{0x00}},
+{REGFLAG_DELAY, 100, {}},
+
+{REGFLAG_END_OF_TABLE, 0x00, {}}
 };
 
 
 static struct LCM_setting_table lcm_sleep_out_setting[] = {
 	// Sleep Out
-	{0x11,1,{0x00}},
+	{0x11, 1, {0x00}},
 	{REGFLAG_DELAY, 120, {}},
+
 	// Display ON
-	{0x29,1,{0x00}},
+	{0x29, 1, {0x00}},
 	{REGFLAG_DELAY, 10, {}},
+
 	{REGFLAG_END_OF_TABLE, 0x00, {}}
 };
 
 
-static struct LCM_setting_table lcm_deep_sleep_mode_in_setting[] = {
+static struct LCM_setting_table lcm_sleep_in_setting[] = {
 	// Display off sequence
-	{0x28,1,{0x00}},
+	{0x01, 1, {0x00}},
 	{REGFLAG_DELAY, 50, {}},
+	
+	{0x28, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
 	// Sleep Mode On
-	{0x10,1,{0x00}},
-	{REGFLAG_DELAY, 120, {}},
+	{0x10, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
 	{REGFLAG_END_OF_TABLE, 0x00, {}}
 };
 
-
-static void push_table(struct LCM_setting_table *table, unsigned int count, unsigned char force_update)
+static void push_table(struct LCM_setting_table *table, unsigned int count,
+		unsigned char force_update)
 {
 	unsigned int i;
 
-	for(i = 0; i < count; i++) {
+	for (i = 0; i < count; i++) {
+
+		unsigned cmd;
+		cmd = table[i].cmd;
 
-        unsigned int cmd;
-        cmd = table[i].cmd;
+		switch (cmd) {
 
-        switch (cmd) {
+		case REGFLAG_DELAY:
+			MDELAY(table[i].count);
+			break;
 
-            case REGFLAG_DELAY :
-                MDELAY(table[i].count);
-                break;
+		case REGFLAG_END_OF_TABLE:
+			break;
 
-            case REGFLAG_END_OF_TABLE :
-                break;
+		default:
+			dsi_set_cmdq_V2(cmd, table[i].count,
+					table[i].para_list, force_update);
+		}
+	}
 
-            default:
-		dsi_set_cmdq_V2(cmd, table[i].count, table[i].para_list, force_update);
-       	}
-    }
 }
 
 
@@ -409,166 +782,245 @@ static void lcm_set_util_funcs(const LCM_UTIL_FUNCS * util)
 
 static void lcm_get_params(LCM_PARAMS * params)
 {
-		memset(params, 0, sizeof(LCM_PARAMS));
-
-		params->type = LCM_TYPE_DSI;
-
-		params->width = FRAME_WIDTH;
-		params->height = FRAME_HEIGHT;
-
-		// enable tearing-free
-		params->dbi.te_mode 		=LCM_DBI_TE_MODE_VSYNC_ONLY;
-		params->dbi.te_edge_polarity    = LCM_POLARITY_RISING;
-
-		#if (LCM_DSI_CMD_MODE)
-		params->dsi.mode = CMD_MODE;
-		#else
-		//params->dsi.mode   = BURST_VDO_MODE;
-		//params->dsi.mode   = SYNC_EVENT_VDO_MODE;
-		params->dsi.mode   = SYNC_PULSE_VDO_MODE;
-		#endif
-
-		// DSI
-		/* Command mode setting */
-		params->dsi.LANE_NUM		    = LCM_THREE_LANE;
-		//The following defined the fomat for data coming from LCD engine.
-		params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
-		params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
-		params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
-		params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;
-
-		// Highly depends on LCD driver capability.
-		// Not support in MT6573
-		params->dsi.packet_size = 256;
-
-		// Video mode setting
-		params->dsi.intermediat_buffer_num = 0;//2;
-
-		params->dsi.PS = LCM_PACKED_PS_24BIT_RGB888;
-		params->dsi.word_count = 720 * 3;
- 
-		params->dsi.vertical_sync_active 				= 2;//4;
-		params->dsi.vertical_backporch 					= 6;//16;//16
-		params->dsi.vertical_frontporch 				= 8;//20;//20 18
-		params->dsi.vertical_active_line 				= FRAME_HEIGHT;
+	memset(params, 0, sizeof(LCM_PARAMS));
+
+	params->type = LCM_TYPE_DSI;
+
+	params->width = FRAME_WIDTH;
+	params->height = FRAME_HEIGHT;
+
+	// enable tearing-free
+	params->dbi.te_mode = LCM_DBI_TE_MODE_DISABLED;
+	params->dbi.te_edge_polarity = LCM_POLARITY_RISING;
+
+#if (LCM_DSI_CMD_MODE)
+	params->dsi.mode = CMD_MODE;
+#else
+	params->dsi.mode   = SYNC_PULSE_VDO_MODE;//SYNC_EVENT_VDO_MODE;//BURST_VDO_MODE;////
+#endif
+
+	// DSI
+	/* Command mode setting */
+		params->dsi.LANE_NUM				= LCM_FOUR_LANE;
+	
+	//The following defined the fomat for data coming from LCD engine.
+	params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
+	params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
+	params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
+	params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;
+	
+	
+	params->dsi.PS=LCM_PACKED_PS_24BIT_RGB888;
+	
+#if (LCM_DSI_CMD_MODE)
+	params->dsi.intermediat_buffer_num = 0;//because DSI/DPI HW design change, this parameters should be 0 when video mode in MT658X; or memory leakage
+	params->dsi.word_count=FRAME_WIDTH*3;	//DSI CMD mode need set these two bellow params, different to 6577
+#else
+	params->dsi.intermediat_buffer_num = 0;	//because DSI/DPI HW design change, this parameters should be 0 when video mode in MT658X; or memory leakage
+#endif
 
-		params->dsi.horizontal_sync_active				= 8;
-		params->dsi.horizontal_backporch 				= 50;
-		params->dsi.horizontal_frontporch 				= 50;
-		params->dsi.horizontal_active_pixel 				= FRAME_WIDTH;
+	// Video mode setting
+	params->dsi.packet_size=256;
 
-		// Bit rate calculation
-		/*
-		params->dsi.pll_div1=1;             // div1=0,1,2,3;div1_real=1,2,4,4
-		params->dsi.pll_div2=0;             // div2=0,1,2,3;div2_real=1,2,4,4
-		params->dsi.fbk_div =15;   	    //10.11.12/48,13/55,15/62,17/70
-		*/
+	params->dsi.vertical_sync_active				=  4;//2
+	params->dsi.vertical_backporch					= 14;//50;
+	params->dsi.vertical_frontporch					= 16;//50;
+	params->dsi.vertical_active_line				= FRAME_HEIGHT; 
 
-		params->dsi.PLL_CLOCK=220;															
+	params->dsi.horizontal_sync_active				= 10;//10
+	params->dsi.horizontal_backporch				= 34;//34; 
+	params->dsi.horizontal_frontporch				= 24;//24;
+	params->dsi.horizontal_active_pixel				= FRAME_WIDTH;
 
+	// Bit rate calculation
+	//1 Every lane speed
+params->dsi.PLL_CLOCK=225;
 }
 
 static void lcm_init(void)
 {
+
 	SET_RESET_PIN(1);
 	MDELAY(10);
 	SET_RESET_PIN(0);
-	MDELAY(10);
+	MDELAY(50);
 	SET_RESET_PIN(1);
-	MDELAY(150);
-
-	push_table(lcm_initialization_setting_FC_BOE, sizeof(lcm_initialization_setting_FC_BOE) / sizeof(struct LCM_setting_table), 1);
+	MDELAY(120);
 
+	push_table(lcm_initialization_setting,sizeof(lcm_initialization_setting) /sizeof(struct LCM_setting_table), 1);
 }
 
 static void lcm_suspend(void)
 {
-	print("start!");
-	push_table(lcm_deep_sleep_mode_in_setting,
-		   sizeof(lcm_deep_sleep_mode_in_setting) /
-		   sizeof(struct LCM_setting_table), 1);
-	SET_RESET_PIN(1);
-	MDELAY(10);
-	SET_RESET_PIN(0);
-	MDELAY(10);
-	SET_RESET_PIN(1);
-	MDELAY(150);
+ 
+     push_table(lcm_sleep_in_setting,sizeof(lcm_sleep_in_setting) /sizeof(struct LCM_setting_table), 1);
+
+     SET_RESET_PIN(0);
+     MDELAY(50);
+	 
+
 }
 
 
 static void lcm_resume(void)
 {
-	print("start!");
+    //unsigned int id;
+	//unsigned char buffer[5];
+	//unsigned int array[5];
+	//lcm_compare_id();
+//	push_table(lcm_sleep_out_setting,sizeof(lcm_sleep_out_setting) /sizeof(struct LCM_setting_table), 1);
 	lcm_init();
+			
+/*array[0] = 0x00063902;// read id return two byte,version and id
+	array[1] = 0x52AA55F0;
+	array[2] = 0x00000108;
+	dsi_set_cmdq(array, 3, 1);
+	MDELAY(10);
 	
+	array[0] = 0x00023700;// read id return two byte,version and id
+	dsi_set_cmdq(array, 1, 1);
+
+	read_reg_v2(0xc5, buffer, 2);
+	id = ((buffer[0] << 8) | buffer[1]);
+#if defined(BUILD_LK)
+printf("%s, [rm68191_ctc50_jhzt]  buffer[0] = [0x%d] buffer[2] = [0x%d] ID = [0x%d]\n",__func__, buffer[0], buffer[1], id);
+#else
+printk("%s, [rm68191_ctc50_jhzt]  buffer[0] = [0x%d] buffer[2] = [0x%d] ID = [0x%d]\n",__func__, buffer[0], buffer[1], id);
+#endif*/
 }
 
+
 static void lcm_update(unsigned int x, unsigned int y,
-                       unsigned int width, unsigned int height)
+		unsigned int width, unsigned int height)
 {
 	unsigned int x0 = x;
 	unsigned int y0 = y;
 	unsigned int x1 = x0 + width - 1;
 	unsigned int y1 = y0 + height - 1;
 
-	unsigned char x0_MSB = ((x0>>8)&0xFF);
-	unsigned char x0_LSB = (x0&0xFF);
-	unsigned char x1_MSB = ((x1>>8)&0xFF);
-	unsigned char x1_LSB = (x1&0xFF);
-	unsigned char y0_MSB = ((y0>>8)&0xFF);
-	unsigned char y0_LSB = (y0&0xFF);
-	unsigned char y1_MSB = ((y1>>8)&0xFF);
-	unsigned char y1_LSB = (y1&0xFF);
+	unsigned char x0_MSB = ((x0 >> 8) & 0xFF);
+	unsigned char x0_LSB = (x0 & 0xFF);
+	unsigned char x1_MSB = ((x1 >> 8) & 0xFF);
+	unsigned char x1_LSB = (x1 & 0xFF);
+	unsigned char y0_MSB = ((y0 >> 8) & 0xFF);
+	unsigned char y0_LSB = (y0 & 0xFF);
+	unsigned char y1_MSB = ((y1 >> 8) & 0xFF);
+	unsigned char y1_LSB = (y1 & 0xFF);
 
 	unsigned int data_array[16];
 
-	data_array[0]= 0x00053902;
-	data_array[1]= (x1_MSB<<24)|(x0_LSB<<16)|(x0_MSB<<8)|0x2a;
-	data_array[2]= (x1_LSB);
-	data_array[3]= 0x00053902;
-	data_array[4]= (y1_MSB<<24)|(y0_LSB<<16)|(y0_MSB<<8)|0x2b;
-	data_array[5]= (y1_LSB);
-	data_array[6]= 0x002c3909;
+	data_array[0] = 0x00053902;
+	data_array[1] =
+		(x1_MSB << 24) | (x0_LSB << 16) | (x0_MSB << 8) | 0x2a;
+	data_array[2] = (x1_LSB);
+	data_array[3] = 0x00053902;
+	data_array[4] =
+		(y1_MSB << 24) | (y0_LSB << 16) | (y0_MSB << 8) | 0x2b;
+	data_array[5] = (y1_LSB);
+	data_array[6] = 0x002c3909;
 
 	dsi_set_cmdq(&data_array, 7, 0);
 
 }
 
-static unsigned int lcm_compare_id()
-{
-
-	unsigned int id = 0;
-	unsigned int id_high=0,id_low=0;
 
-	unsigned char buffer[3];
-	unsigned int data_array[16];
+static unsigned int lcm_compare_id(void)
+{
+	int array[4];
+	char buffer[5];
+	char id_high=0;
+	char id_low=0;
+	int id1=0;
+	int id2=0;
 
-	SET_RESET_PIN(1);	//NOTE:should reset LCM firstly
+	SET_RESET_PIN(1);
 	MDELAY(10);
 	SET_RESET_PIN(0);
-	MDELAY(50);
+	MDELAY(10);
 	SET_RESET_PIN(1);
-	MDELAY(50);
-
-	data_array[0]=0x01FE1500;
-	dsi_set_cmdq(&data_array,1, 1);
+	MDELAY(120);
 	
-	data_array[0] = 0x00013700;
-	dsi_set_cmdq(data_array, 1, 1);
+	array[0]=0x01FE1500;
+	dsi_set_cmdq(&array,1, 1);
+	
+	array[0] = 0x00013700;
+	dsi_set_cmdq(array, 1, 1);
+	read_reg_v2(0xde, buffer, 1);
 
-	read_reg_v2(0xDE, buffer, 1);
 	id_high = buffer[0];
-
-	read_reg_v2(0xDF, buffer, 1);
+	read_reg_v2(0xdf, buffer, 1);
 	id_low = buffer[0];
-
-	id = (id_high<<8) | id_low;
-
-	print("ID=0x%x\n",id);
-
-	return (LCM_IC_ID == id) ? 1 : 0;
+	id1 = (id_high<<8) | id_low;
+
+	#if defined(BUILD_LK)
+		printf("rm68200a %s id1 = 0x%04x, id2 = 0x%04x\n", __func__, id1,id2);
+	#else
+		printk("rm68200a %s id1 = 0x%04x, id2 = 0x%04x\n", __func__, id1,id2);
+	#endif
+	return (0x6820 == id1)?1:0;
 }
+//no use
+static unsigned int lcm_esd_recover(void)
+{
+    unsigned char para = 0;
+	unsigned int data_array1[16];
 
+#ifndef BUILD_LK
+    printk("RM68190 lcm_esd_recover enter\n");
+#endif
+    
+
+    SET_RESET_PIN(1);
+    MDELAY(10);
+    SET_RESET_PIN(0);
+    MDELAY(30);
+    SET_RESET_PIN(1);
+    MDELAY(130);
+    #if 0
+	push_table(lcm_initialization_setting, sizeof(lcm_initialization_setting) / sizeof(struct LCM_setting_table), 1);
+	MDELAY(10);
+	push_table(lcm_sleep_out_setting, sizeof(lcm_sleep_out_setting) / sizeof(struct LCM_setting_table), 1);
+    	MDELAY(10);
+    #else
+        lcm_init();
+    #endif
+   
+   data_array1[0]= 0x00320500;
+   dsi_set_cmdq(&data_array1, 1, 1);
+   MDELAY(50);
+
+    return 1;
+}
+static unsigned int lcm_esd_check(void)
+{
+    unsigned char buffer[1] ={0};
+    //unsigned int data_array[1];
+   // data_array[0] = 0x00013700;// read id return two byte,version and id 3 byte 
+  // dsi_set_cmdq(&data_array, 1, 1);
+   read_reg_v2(0x0a, buffer, 1);
+   
+#ifndef BUILD_LK
+    printk("RM68190 lcm_esd_check enter %x\n",buffer[0]);
+#endif
+#ifndef BUILD_LK
+        if(buffer[0] == 0x9C)
+        {
+          #ifndef BUILD_LK
+          printk("RM68190 lcm_esd_check false \n");
+          #endif
+
+            return false;
+        }
+        else
+        {      
+           #ifndef BUILD_LK
+          printk("RM68190 lcm_esd_check true \n");
+          #endif
+           //lcm_esd_recover();
+            return true;
+        }
+#endif
+}
 
 // ---------------------------------------------------------------------------
 //  Get LCM Driver Hooks
diff --git a/include/config/auto.conf b/include/config/auto.conf
index 03c8c52..f258550 100644
--- a/include/config/auto.conf
+++ b/include/config/auto.conf
@@ -785,6 +785,7 @@ CONFIG_NETFILTER_XT_MATCH_LIMIT=y
 CONFIG_MD1_SMEM_SIZE=0x200000
 CONFIG_CUSTOM_KERNEL_SENSORHUB=""
 CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_TOUCHSCREEN_MTK_FT6206_X2605=y
 CONFIG_FB=y
 CONFIG_TRACING=y
 CONFIG_I2C_COMPAT=y
diff --git a/include/config/touchscreen/mtk/ft6206/x2605.h b/include/config/touchscreen/mtk/ft6206/x2605.h
new file mode 100644
index 0000000..e69de29
diff --git a/include/generated/autoconf.h b/include/generated/autoconf.h
index d64a007..0d89875 100644
--- a/include/generated/autoconf.h
+++ b/include/generated/autoconf.h
@@ -787,6 +787,7 @@
 #define CONFIG_MD1_SMEM_SIZE 0x200000
 #define CONFIG_CUSTOM_KERNEL_SENSORHUB ""
 #define CONFIG_HAVE_SYSCALL_TRACEPOINTS 1
+#define CONFIG_TOUCHSCREEN_MTK_FT6206_X2605 1
 #define CONFIG_FB 1
 #define CONFIG_TRACING 1
 #define CONFIG_I2C_COMPAT 1
diff --git a/include/generated/compile.h b/include/generated/compile.h
index 4527347..5f1dc5f 100644
--- a/include/generated/compile.h
+++ b/include/generated/compile.h
@@ -1,7 +1,7 @@
-/* This file is auto generated, version 15 */
+/* This file is auto generated, version 17 */
 /* SMP PREEMPT */
 #define UTS_MACHINE "arm64"
-#define UTS_VERSION "#15 SMP PREEMPT Sun May 8 01:15:54 MSK 2016"
+#define UTS_VERSION "#17 SMP PREEMPT Sun May 8 01:29:37 MSK 2016"
 #define LINUX_COMPILE_BY "olegsvs"
 #define LINUX_COMPILE_HOST "olegsvs-develop"
 #define LINUX_COMPILER "gcc version 4.9 20150123 (prerelease) (GCC) "
-- 
2.7.4

