From aeeb2769a0e253aa20614a76ac89921d5d872806 Mon Sep 17 00:00:00 2001
From: olegsvs <oleg.texet@gmail.com>
Date: Tue, 3 May 2016 16:28:39 +0300
Subject: [PATCH 1041/1168] OH MY GOD

Former-commit-id: 137e52ca8492d764b76088a1d15ffccc7c37b7d8
---
 arch/arm64/configs/benefit_m7_defconfig            |   7 ++-
 drivers/input/touchscreen/doubletap2wake.c         |  14 +----
 drivers/input/touchscreen/sweep2wake.c             |  12 +---
 drivers/misc/Kconfig                               |   7 ---
 drivers/misc/Makefile                              |   1 -
 drivers/misc/mediatek/Kconfig.drivers              |   4 ++
 drivers/misc/mediatek/Makefile                     |   1 -
 drivers/misc/mediatek/alsps/Makefile               |  30 +---------
 drivers/misc/mediatek/alsps/alsps.c                |   0
 drivers/misc/mediatek/alsps/inc/aal_control.h      |   0
 drivers/misc/mediatek/alsps/inc/alsps.h            |   0
 drivers/misc/mediatek/alsps/inc/alsps_factory.h    |   0
 drivers/misc/mediatek/alsps/inc/cust_alsps.h       |   9 ++-
 drivers/misc/mediatek/alsps/inc/stk_cust_alsps.h   |  49 ++++++++++++++++
 drivers/misc/mediatek/alsps/stk3x1x-new/Makefile   |   0
 drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c  |  11 +---
 drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.h  |   0
 drivers/misc/mediatek/alsps/stk3x1x/Makefile       |   0
 drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.c      |   0
 drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.h      |   0
 .../mediatek/alsps/stk3x1x_driver/stk_cust_alsps.h |  49 ++++++++++++++++
 .../jd9365_6735_dsi_video/jd9365_6735_dsi_video.c  |  43 ++++++++++----
 .../jd9367_6735_dsi_video/jd9367_6735_dsi_video.c  |  11 +---
 .../misc/mediatek/mach/mt6735/benefit_m7/Makefile  |   4 ++
 .../benefit_m7/alsps/stk3x1x_driver/Makefile       |   4 ++
 .../benefit_m7/alsps/stk3x1x_driver/cust_alsps.c   |  63 +++++++++++++++++++++
 .../mach/mt6735/benefit_m7/dct/dct/codegen.dws     | Bin 30031 -> 29816 bytes
 .../mach/mt6735/benefit_m7/dct/dct/cust_adc.dtsi   |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_adc.h      |   2 +-
 .../mt6735/benefit_m7/dct/dct/cust_clk_buf.dtsi    |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.h  |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_eint.dtsi  |   9 ++-
 .../mach/mt6735/benefit_m7/dct/dct/cust_eint.h     |   7 ++-
 .../mach/mt6735/benefit_m7/dct/dct/cust_eint_md1.h |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_gpio.dtsi  |   2 +-
 .../mt6735/benefit_m7/dct/dct/cust_gpio_boot.h     |   2 +-
 .../mt6735/benefit_m7/dct/dct/cust_gpio_usage.h    |  15 +++--
 .../mach/mt6735/benefit_m7/dct/dct/cust_i2c.dtsi   |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_i2c.h      |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_kpd.dtsi   |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_kpd.h      |   2 +-
 .../mt6735/benefit_m7/dct/dct/cust_md1_eint.dtsi   |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_pmic.dtsi  |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/cust_power.h    |   2 +-
 .../mt6735/benefit_m7/dct/dct/mt6735m-pinfunc.h    |   2 +-
 .../mt6735/benefit_m7/dct/dct/pinctrl-mtk-mt6735.h |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/pmic_drv.c      |   2 +-
 .../mach/mt6735/benefit_m7/dct/dct/pmic_drv.h      |   2 +-
 drivers/power/88pm860x_charger.c                   |   1 -
 drivers/power/lp8788-charger.c                     |   4 +-
 drivers/power/mediatek/battery_meter.c             |   4 +-
 drivers/power/wm831x_power.c                       |   6 +-
 tools/dct/DCT.log                                  |  10 ----
 ...1\213\320\271 \321\204\320\260\320\271\320\273" |   4 ++
 54 files changed, 277 insertions(+), 138 deletions(-)
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/Makefile
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/alsps.c
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/inc/aal_control.h
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/inc/alsps.h
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/inc/alsps_factory.h
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/inc/cust_alsps.h
 create mode 100644 drivers/misc/mediatek/alsps/inc/stk_cust_alsps.h
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x-new/Makefile
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.h
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x/Makefile
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.c
 mode change 100644 => 100755 drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.h
 create mode 100644 drivers/misc/mediatek/alsps/stk3x1x_driver/stk_cust_alsps.h
 create mode 100644 drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/Makefile
 create mode 100644 drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/cust_alsps.c

diff --git a/arch/arm64/configs/benefit_m7_defconfig b/arch/arm64/configs/benefit_m7_defconfig
index bac0cfb..3217db2 100644
--- a/arch/arm64/configs/benefit_m7_defconfig
+++ b/arch/arm64/configs/benefit_m7_defconfig
@@ -1,6 +1,6 @@
 #
 # Automatically generated file; DO NOT EDIT.
-# Linux/arm64 3.10.65 Kernel Configuration
+# Linux/arm64 3.10.101 Kernel Configuration
 #
 CONFIG_ARM64=y
 CONFIG_ARM_HAS_SG_CHAIN=y
@@ -995,7 +995,7 @@ CONFIG_THUNDERQUAKE_ENGINE_GPL=y
 # CONFIG_SENSORS_LIS3_I2C is not set
 
 # pocket mode (avoid dt2w to be active while proximity sensor is triggered)
-CONFIG_POCKETMOD=n
+# CONFIG_POCKETMOD is not set
 CONFIG_DYNAMIC_FSYNC=y
 #
 # Altera FPGA firmware download module
@@ -1288,7 +1288,8 @@ CONFIG_MTK_SIM2=y
 # CONFIG_MTK_APM_16D is not set
 # CONFIG_MTK_EPL2182 is not set
 # CONFIG_MTK_EPL2182_NEW is not set
-#CONFIG_MTK_STK3X1X_NEW=y
+CONFIG_MTK_STK3X1X_NEW=n
+CONFIG_MTK_STK3X1X_DRIVER=y
 # CONFIG_MTK_CM36652_NEW is not set
 # CONFIG_MTK_APDS9930 is not set
 # CONFIG_MTK_CM3232_NEW is not set
diff --git a/drivers/input/touchscreen/doubletap2wake.c b/drivers/input/touchscreen/doubletap2wake.c
index 5878689..e07cc45 100644
--- a/drivers/input/touchscreen/doubletap2wake.c
+++ b/drivers/input/touchscreen/doubletap2wake.c
@@ -4,8 +4,6 @@
  *
  * Copyright (c) 2013, Dennis Rassmann <showp1984@gmail.com>
  * Copyright (c) 2015, Vineeth Raj <contact.twn@openmailbox.org>
- * Copyright (c) 2015, Swapnil Solanki <swapnil133609@gmail.com>
- * Copyright (c) 2015, Levin Calado <levincalado@gmail.com>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -53,10 +51,6 @@
 #define ANDROID_TOUCH_DECLARED
 #endif
 
-#ifdef CONFIG_POCKETMOD
-#include <linux/pocket_mod.h>
-#endif
-
 /* Version, author, desc, etc */
 #define DRIVER_AUTHOR "Dennis Rassmann <showp1984@gmail.com>"
 #define DRIVER_DESCRIPTION "Doubletap2wake for almost any device"
@@ -197,13 +191,7 @@ static void detect_doubletap2wake(int x, int y, bool st)
 }
 
 static void dt2w_input_callback(struct work_struct *unused) {
-	
-	#ifdef CONFIG_POCKETMOD
-	if (device_is_pocketed()){
-		return;
-	}
-	else
-	#endif
+
 	detect_doubletap2wake(touch_x, touch_y, true);
 
 	return;
diff --git a/drivers/input/touchscreen/sweep2wake.c b/drivers/input/touchscreen/sweep2wake.c
index 04b6d4d..27062c6 100644
--- a/drivers/input/touchscreen/sweep2wake.c
+++ b/drivers/input/touchscreen/sweep2wake.c
@@ -42,10 +42,6 @@
 #endif
 #endif
 
-#ifdef CONFIG_POCKETMOD
-#include <linux/pocket_mod.h>
-#endif
-
 /* uncomment since no touchscreen defines android touch, do that here */
 //#define ANDROID_TOUCH_DECLARED
 
@@ -247,13 +243,7 @@ static void detect_sweep2wake(int x, int y, bool st)
 }
 
 static void s2w_input_callback(struct work_struct *unused) {
-	
-	#ifdef CONFIG_POCKETMOD
-	if (device_is_pocketed()){
-		return;
-	}
-	else
-	#endif
+
 	detect_sweep2wake(touch_x, touch_y, true);
 
 	return;
diff --git a/drivers/misc/Kconfig b/drivers/misc/Kconfig
index b369f7d..3509235 100644
--- a/drivers/misc/Kconfig
+++ b/drivers/misc/Kconfig
@@ -46,13 +46,6 @@ config AD525X_DPOT_I2C
 	  To compile this driver as a module, choose M here: the
 	  module will be called ad525x_dpot-i2c.
 
-config POCKETMOD
-	bool "PocketMod for device wake modifications"
-	default y
-	help
-		Say Y here to enable PocketMod. Users can always
-		toggle this on/off from sysfs later (should they
-		want it)  
 
 config AD525X_DPOT_SPI
 	tristate "support SPI bus connection"
diff --git a/drivers/misc/Makefile b/drivers/misc/Makefile
index 0b5adc7..11bae8e 100755
--- a/drivers/misc/Makefile
+++ b/drivers/misc/Makefile
@@ -13,7 +13,6 @@ obj-$(CONFIG_ATMEL_SSC)		+= atmel-ssc.o
 obj-$(CONFIG_ATMEL_TCLIB)	+= atmel_tclib.o
 obj-$(CONFIG_BMP085)		+= bmp085.o
 obj-$(CONFIG_BMP085_I2C)	+= bmp085-i2c.o
-obj-$(CONFIG_POCKETMOD)		+= pocket_mod.o
 obj-$(CONFIG_BMP085_SPI)	+= bmp085-spi.o
 obj-$(CONFIG_DUMMY_IRQ)		+= dummy-irq.o
 obj-$(CONFIG_ICS932S401)	+= ics932s401.o
diff --git a/drivers/misc/mediatek/Kconfig.drivers b/drivers/misc/mediatek/Kconfig.drivers
index 9836990..57c95c4 100755
--- a/drivers/misc/mediatek/Kconfig.drivers
+++ b/drivers/misc/mediatek/Kconfig.drivers
@@ -935,6 +935,10 @@ config MTK_STK3X1X
 config MTK_STK3X1X_NEW
 	bool "STK3X1X for MediaTek package"
 	default n
+
+config MTK_STK3X1X_DRIVER
+	bool "STK3X1X for MediaTek package"
+	default n
 config MTK_CM36652_NEW
 	bool "cm36652 for MediaTek package"
 	default n
diff --git a/drivers/misc/mediatek/Makefile b/drivers/misc/mediatek/Makefile
index 9b99a0f..c62062f 100755
--- a/drivers/misc/mediatek/Makefile
+++ b/drivers/misc/mediatek/Makefile
@@ -322,4 +322,3 @@ endif
 ###########
 obj-y += custeint/
 obj-y += fingerprint/
-obj-y += mac_fingerprint/
diff --git a/drivers/misc/mediatek/alsps/Makefile b/drivers/misc/mediatek/alsps/Makefile
old mode 100644
new mode 100755
index 6df3c70..7dd9d60
--- a/drivers/misc/mediatek/alsps/Makefile
+++ b/drivers/misc/mediatek/alsps/Makefile
@@ -21,31 +21,9 @@ ifeq ($(CONFIG_MTK_EPL2182),y)
 obj-y	+=  epl2182/
 endif
 
-ifeq ($(CONFIG_MTK_EM3071X),y)
-obj-y	+=  em3071X/
-endif
 ifeq ($(CONFIG_MTK_EPL2182_NEW),y)
 obj-y	+=  EPL2182-new/
 endif
-ifeq ($(CONFIG_MTK_STK3X1X_DRIVER),y)
-obj-y	+=  stk3x1x_driver/
-endif
-ifeq ($(CONFIG_MTK_EPL2182_NEW_FAE),y)
-obj-y	+=  EPL2182-new-fae/
-endif
-
-ifeq ($(CONFIG_MTK_EPL8862),y)
-obj-y	+=  EPL8862/
-endif
-
-ifeq ($(CONFIG_MTK_EPL2182_NEW_XINGFEI),y)
-obj-y	+=  EPL2182-new-xingfei/
-endif
-
-ifeq ($(CONFIG_MTK_AP3216C),y)
-obj-y	+=  ap3216c/
-endif
-
 ifeq ($(CONFIG_MTK_STK3X1X),y)
 obj-y	+=  stk3x1x/
 endif
@@ -64,13 +42,9 @@ endif
 ifeq ($(CONFIG_MTK_APDS9930_NEW),y)
 obj-y	+=  APDS9930-new/
 endif
-ifeq ($(CONFIG_MTK_STK3X1X_NEW),y)
-obj-y	+=  stk3x1x-new/
+ifeq ($(CONFIG_MTK_STK3X1X_DRIVER),y)
+obj-y	+=  stk3x1x_driver/
 endif
 ifeq ($(CONFIG_MTK_RPR410),y)
 obj-y	+=  rpr410/
 endif
-
-ifeq ($(CONFIG_MTK_DUMMY_PS),y)
-obj-y	+=  dummy_ps/
-endif
diff --git a/drivers/misc/mediatek/alsps/alsps.c b/drivers/misc/mediatek/alsps/alsps.c
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/inc/aal_control.h b/drivers/misc/mediatek/alsps/inc/aal_control.h
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/inc/alsps.h b/drivers/misc/mediatek/alsps/inc/alsps.h
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/inc/alsps_factory.h b/drivers/misc/mediatek/alsps/inc/alsps_factory.h
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/inc/cust_alsps.h b/drivers/misc/mediatek/alsps/inc/cust_alsps.h
old mode 100644
new mode 100755
index 1c677ff..70b17db
--- a/drivers/misc/mediatek/alsps/inc/cust_alsps.h
+++ b/drivers/misc/mediatek/alsps/inc/cust_alsps.h
@@ -34,10 +34,15 @@ struct alsps_hw {
     int power_lp_mode_ctrl;                                 /*!< 1: disable ldo low power mode when p sensor enabled ; 0: no action*/
     bool is_batch_supported_ps;
     bool is_batch_supported_als;
+///wangxiqiang
+	unsigned int	state_val;
+	unsigned int 	psctrl_val;
+	unsigned int 	alsctrl_val;
+	unsigned int 	ledctrl_val;
+	unsigned int 	wait_val;
 };
 
-extern struct alsps_hw* get_cust_alsps_hw(void);
-
+extern struct alsps_hw* stk_get_cust_alsps_hw(void);
 
  struct alsps_hw* get_alsps_dts_func(const char *, struct alsps_hw*);
 __weak int pmic_ldo_suspend_enable(int enable);
diff --git a/drivers/misc/mediatek/alsps/inc/stk_cust_alsps.h b/drivers/misc/mediatek/alsps/inc/stk_cust_alsps.h
new file mode 100644
index 0000000..70b17db
--- /dev/null
+++ b/drivers/misc/mediatek/alsps/inc/stk_cust_alsps.h
@@ -0,0 +1,49 @@
+#ifndef __CUST_ALSPS_H__
+#define __CUST_ALSPS_H__
+
+#include <linux/types.h>
+
+#define C_CUST_ALS_LEVEL    16
+#define C_CUST_I2C_ADDR_NUM 4
+
+#define MAX_THRESHOLD_HIGH 0xffff
+#define MIN_THRESHOLD_LOW 0x0
+
+struct alsps_hw {
+    int i2c_num;                                    /*!< the i2c bus used by ALS/PS */
+    int power_id;                                   /*!< the VDD power id of the als chip */
+    int power_vol;                                  /*!< the VDD power voltage of the als chip */
+	int polling_mode;                               /*!< 1: polling mode ; 0:interrupt mode*/
+	int polling_mode_ps;                               /*!< 1: polling mode ; 0:interrupt mode*/
+	int polling_mode_als;                               /*!< 1: polling mode ; 0:interrupt mode*/
+    unsigned char   i2c_addr[C_CUST_I2C_ADDR_NUM];  /*!< i2c address list, some chip will have multiple address */
+    unsigned int    als_level[C_CUST_ALS_LEVEL-1];  /*!< (C_CUST_ALS_LEVEL-1) levels divides all range into C_CUST_ALS_LEVEL levels*/
+    unsigned int    als_value[C_CUST_ALS_LEVEL];    /*!< the value reported in each level */
+    unsigned int    ps_threshold;                   /*!< the threshold of proximity sensor */
+	unsigned int    als_window_loss;                /*!< the window loss  */
+	unsigned int    ps_threshold_high;
+	unsigned int    ps_threshold_low;
+	unsigned int    als_threshold_high;
+	unsigned int    als_threshold_low;
+    int als_power_vio_id;                                   /*!< the VIO power id of the als chip */
+    int als_power_vio_vol;                                  /*!< the VIO power voltage of the als chip */
+    int ps_power_vdd_id;                                   /*!< the VDD power id of the ps chip */
+    int ps_power_vdd_vol;                                  /*!< the VDD power voltage of the ps chip */
+    int ps_power_vio_id;                                   /*!< the VIO power id of the ps chip */
+    int ps_power_vio_vol;                                  /*!< the VIO power voltage of the ps chip */
+    int power_lp_mode_ctrl;                                 /*!< 1: disable ldo low power mode when p sensor enabled ; 0: no action*/
+    bool is_batch_supported_ps;
+    bool is_batch_supported_als;
+///wangxiqiang
+	unsigned int	state_val;
+	unsigned int 	psctrl_val;
+	unsigned int 	alsctrl_val;
+	unsigned int 	ledctrl_val;
+	unsigned int 	wait_val;
+};
+
+extern struct alsps_hw* stk_get_cust_alsps_hw(void);
+
+ struct alsps_hw* get_alsps_dts_func(const char *, struct alsps_hw*);
+__weak int pmic_ldo_suspend_enable(int enable);
+#endif
diff --git a/drivers/misc/mediatek/alsps/stk3x1x-new/Makefile b/drivers/misc/mediatek/alsps/stk3x1x-new/Makefile
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c b/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c
old mode 100644
new mode 100755
index b1542e1..160a6e4
--- a/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c
+++ b/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.c
@@ -24,9 +24,6 @@
 #include <linux/irq.h>
 #include <linux/miscdevice.h>
 #include <asm/uaccess.h>
-#include <linux/hwmsensor.h>
-#include <linux/hwmsen_dev.h>
-#include <linux/sensors_io.h>
 #include <linux/delay.h>
 #include <linux/input.h>
 #include <linux/workqueue.h>
@@ -46,19 +43,15 @@
 #include <linux/hwmsensor.h>
 #include <linux/sensors_io.h>
 #include <linux/hwmsen_dev.h>
-#include "cust_alsps.h"
+#include <cust_alsps.h>
 #include <alsps.h>
 #include "stk3x1x.h"
-#define GPIO_ALS_EINT_PIN         (GPIO65 | 0x80000000)
-#define GPIO_ALS_EINT_PIN_M_GPIO   GPIO_MODE_00
-#define GPIO_ALS_EINT_PIN_M_KROW   GPIO_MODE_04
-#define GPIO_ALS_EINT_PIN_M_EINT   GPIO_ALS_EINT_PIN_M_GPIO
+
 #define DRIVER_VERSION          "3.1.2.1nk"
 //#define STK_PS_POLLING_LOG
 //#define STK_FIR
 //#define STK_IRS
 //#include <mach/mt_devs.h>
-extern struct alsps_hw *get_cust_alsps_hw(void);
 #include <mach/mt_typedefs.h>
 #include <mach/mt_gpio.h>
 #include <mach/mt_pm_ldo.h>
diff --git a/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.h b/drivers/misc/mediatek/alsps/stk3x1x-new/stk3x1x.h
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/stk3x1x/Makefile b/drivers/misc/mediatek/alsps/stk3x1x/Makefile
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.c b/drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.c
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.h b/drivers/misc/mediatek/alsps/stk3x1x/stk3x1x.h
old mode 100644
new mode 100755
diff --git a/drivers/misc/mediatek/alsps/stk3x1x_driver/stk_cust_alsps.h b/drivers/misc/mediatek/alsps/stk3x1x_driver/stk_cust_alsps.h
new file mode 100644
index 0000000..70b17db
--- /dev/null
+++ b/drivers/misc/mediatek/alsps/stk3x1x_driver/stk_cust_alsps.h
@@ -0,0 +1,49 @@
+#ifndef __CUST_ALSPS_H__
+#define __CUST_ALSPS_H__
+
+#include <linux/types.h>
+
+#define C_CUST_ALS_LEVEL    16
+#define C_CUST_I2C_ADDR_NUM 4
+
+#define MAX_THRESHOLD_HIGH 0xffff
+#define MIN_THRESHOLD_LOW 0x0
+
+struct alsps_hw {
+    int i2c_num;                                    /*!< the i2c bus used by ALS/PS */
+    int power_id;                                   /*!< the VDD power id of the als chip */
+    int power_vol;                                  /*!< the VDD power voltage of the als chip */
+	int polling_mode;                               /*!< 1: polling mode ; 0:interrupt mode*/
+	int polling_mode_ps;                               /*!< 1: polling mode ; 0:interrupt mode*/
+	int polling_mode_als;                               /*!< 1: polling mode ; 0:interrupt mode*/
+    unsigned char   i2c_addr[C_CUST_I2C_ADDR_NUM];  /*!< i2c address list, some chip will have multiple address */
+    unsigned int    als_level[C_CUST_ALS_LEVEL-1];  /*!< (C_CUST_ALS_LEVEL-1) levels divides all range into C_CUST_ALS_LEVEL levels*/
+    unsigned int    als_value[C_CUST_ALS_LEVEL];    /*!< the value reported in each level */
+    unsigned int    ps_threshold;                   /*!< the threshold of proximity sensor */
+	unsigned int    als_window_loss;                /*!< the window loss  */
+	unsigned int    ps_threshold_high;
+	unsigned int    ps_threshold_low;
+	unsigned int    als_threshold_high;
+	unsigned int    als_threshold_low;
+    int als_power_vio_id;                                   /*!< the VIO power id of the als chip */
+    int als_power_vio_vol;                                  /*!< the VIO power voltage of the als chip */
+    int ps_power_vdd_id;                                   /*!< the VDD power id of the ps chip */
+    int ps_power_vdd_vol;                                  /*!< the VDD power voltage of the ps chip */
+    int ps_power_vio_id;                                   /*!< the VIO power id of the ps chip */
+    int ps_power_vio_vol;                                  /*!< the VIO power voltage of the ps chip */
+    int power_lp_mode_ctrl;                                 /*!< 1: disable ldo low power mode when p sensor enabled ; 0: no action*/
+    bool is_batch_supported_ps;
+    bool is_batch_supported_als;
+///wangxiqiang
+	unsigned int	state_val;
+	unsigned int 	psctrl_val;
+	unsigned int 	alsctrl_val;
+	unsigned int 	ledctrl_val;
+	unsigned int 	wait_val;
+};
+
+extern struct alsps_hw* stk_get_cust_alsps_hw(void);
+
+ struct alsps_hw* get_alsps_dts_func(const char *, struct alsps_hw*);
+__weak int pmic_ldo_suspend_enable(int enable);
+#endif
diff --git a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
index 65726b7..89cab3a 100644
--- a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
+++ b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
@@ -109,9 +109,6 @@
 #ifndef FALSE
     #define FALSE 0
 #endif
-#ifdef CONFIG_POCKETMOD
-#include <linux/pocket_mod.h>
-#endif
 #ifdef CONFIG_DOUBLETAP2WAKE
 #include <linux/input/doubletap2wake.h>
 #endif
@@ -415,8 +412,7 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 
 {REGFLAG_END_OF_TABLE,0x00,{}}
 };
-
-static struct LCM_setting_table lcm_sleep_out_setting[] = {
+/*
     // Sleep Out
     {0x11, 0, {0x00}},
     {REGFLAG_DELAY, 120, {}},
@@ -437,9 +433,38 @@ static struct LCM_setting_table lcm_sleep_mode_in_setting[] = {
 	{0x10, 0, {0x00}},
 	{REGFLAG_DELAY, 120, {}},
 	//{REGFLAG_END_OF_TABLE, 0x00, {}}
+};*/
+static struct LCM_setting_table lcm_sleep_out_setting[] = {
+	// Sleep Out
+	{0x11, 1, {0x00}},
+	{REGFLAG_DELAY, 120, {}},
+
+	// Display ON
+	{0x29, 1, {0x00}},
+	{REGFLAG_DELAY, 10, {}},
+
+	{REGFLAG_END_OF_TABLE, 0x00, {}}
+};
+
+
+static struct LCM_setting_table lcm_sleep_in_setting[] = {
+	// Display off sequence
+	{0x01, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+	
+	{0x28, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
+	// Sleep Mode On
+	{0x10, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
+	{REGFLAG_END_OF_TABLE, 0x00, {}}
 };
 
 
+
+
 static void push_table(struct LCM_setting_table *table, unsigned int count,
 		unsigned char force_update)
 {
@@ -602,9 +627,7 @@ static void lcm_suspend(void)
  	array[0] = 0x014f1500;// read id return two byte,version and id
 	dsi_set_cmdq(&array, 1, 1);
 	MDELAY(50);
-#ifdef CONFIG_POCKETMOD
-	is_screen_on = 0;
-	#endif 
+
 }
 
 
@@ -616,9 +639,7 @@ static void lcm_resume(void)
 	//lcm_compare_id();
 //	push_table(lcm_sleep_out_setting,sizeof(lcm_sleep_out_setting) /sizeof(struct LCM_setting_table), 1);
 	lcm_init();
-			#ifdef CONFIG_POCKETMOD
-	is_screen_on = 1;
-	#endif
+
 /*array[0] = 0x00063902;// read id return two byte,version and id
 	array[1] = 0x52AA55F0;
 	array[2] = 0x00000108;
diff --git a/drivers/misc/mediatek/lcm/jd9367_6735_dsi_video/jd9367_6735_dsi_video.c b/drivers/misc/mediatek/lcm/jd9367_6735_dsi_video/jd9367_6735_dsi_video.c
index 4a0156d..3e8437d 100644
--- a/drivers/misc/mediatek/lcm/jd9367_6735_dsi_video/jd9367_6735_dsi_video.c
+++ b/drivers/misc/mediatek/lcm/jd9367_6735_dsi_video/jd9367_6735_dsi_video.c
@@ -114,9 +114,7 @@ static unsigned int lcm_esd_test = FALSE;      ///only for ESD test
 // ---------------------------------------------------------------------------
 //  Local Variables
 // ---------------------------------------------------------------------------
-#ifdef CONFIG_POCKETMOD
-#include <linux/pocket_mod.h>
-#endif
+
 #ifdef CONFIG_DOUBLETAP2WAKE
 #include <linux/input/doubletap2wake.h>
 #endif
@@ -596,9 +594,7 @@ static void lcm_suspend(void)
 
     SET_RESET_PIN(0);
     MDELAY(200);
-#ifdef CONFIG_POCKETMOD
-	is_screen_on = 0;
-	#endif 
+
 
 }
 
@@ -606,9 +602,6 @@ static void lcm_suspend(void)
 static void lcm_resume(void)
 {
   lcm_init();
-#ifdef CONFIG_POCKETMOD
-	is_screen_on = 1;
-	#endif
 
 }
          
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/Makefile b/drivers/misc/mediatek/mach/mt6735/benefit_m7/Makefile
index ee079b2..7b96fb0 100755
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/Makefile
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/Makefile
@@ -37,6 +37,10 @@ ifeq ($(CONFIG_MTK_MC3XXX_AUTO),y)
 obj-y   +=  accelerometer/mc3xxx_auto/
 endif
 
+ifeq ($(CONFIG_MTK_STK3X1X_DRIVER),y)
+obj-y   +=  alsps/stk3x1x_driver/
+endif
+
 ifeq ($(CONFIG_MTK_ITG1010_NEW),y)
 obj-y   +=  gyroscope/ITG1010-new/
 endif
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/Makefile b/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/Makefile
new file mode 100644
index 0000000..b9b1943
--- /dev/null
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/Makefile
@@ -0,0 +1,4 @@
+include $(srctree)/drivers/misc/mediatek/Makefile.custom
+
+obj-y	:=  cust_alsps.o
+
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/cust_alsps.c b/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/cust_alsps.c
new file mode 100644
index 0000000..a3bc42a
--- /dev/null
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/alsps/stk3x1x_driver/cust_alsps.c
@@ -0,0 +1,63 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein
+ * is confidential and proprietary to MediaTek Inc. and/or its licensors.
+ * Without the prior written permission of MediaTek inc. and/or its licensors,
+ * any reproduction, modification, use or disclosure of MediaTek Software,
+ * and information contained herein, in whole or in part, shall be strictly prohibited.
+ */
+/* MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
+ * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+ * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+ * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+ * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
+ * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
+ * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
+ * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
+ * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
+ * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+ * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+ * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
+ * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek Software")
+ * have been modified by MediaTek Inc. All revisions are subject to any receiver's
+ * applicable license agreements with MediaTek Inc.
+ */
+
+#include <linux/types.h>
+#include "stk_cust_alsps.h"
+#include <mach/mt_pm_ldo.h>
+
+static struct alsps_hw cust_alsps_hw = {
+	/* i2c bus number, for mt657x, default=0. For mt6589, default=3 */
+
+    .i2c_num    = 2,	
+	//.polling_mode =1,
+	.polling_mode_ps =0,
+	.polling_mode_als =1,   
+    .power_id   = MT65XX_POWER_NONE,    /*LDO is not used*/
+    .power_vol  = VOL_DEFAULT,          /*LDO is not used*/
+    .i2c_addr   = {0x90, 0x00, 0x00, 0x00},	/*STK3x1x*/
+    .als_level  = {5,  9, 36, 59, 90, 260, 300, 400, 500, 845, 1136, 1545, 2364, 4655, 6982},	/* als_code */
+    .als_value  = {10, 10, 40, 65, 90, 145, 225, 300, 550, 930, 1250, 1700, 2600, 5120, 7680, 10240},    /* lux */
+   	.state_val = 0x0,		/* disable all */
+	.psctrl_val = 0x31,		/* ps_persistance=1, ps_gain=64X, PS_IT=0.391ms */
+	.alsctrl_val = 0x2A,	/* als_persistance=1, als_gain=16X, ALS_IT=200ms */
+	.ledctrl_val = 0xFF,	/* 100mA IRDR, 64/64 LED duty */
+	.wait_val = 0x7,		/* 50 ms */
+    .ps_threshold_high = 1700,
+    .ps_threshold_low = 1500,
+};
+
+struct alsps_hw *stk_get_cust_alsps_hw(void) {
+    return &cust_alsps_hw;
+}
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/codegen.dws b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/codegen.dws
index 19149d4061d45a6147e14fd58be3a37855e96005..74e92581cb787858f8ca0e2fc70350a33e03e115 100755
GIT binary patch
delta 193
zcmX^Ait)z_#tp4JlRwyLOg6C5n4DmvGugqJXYvFa6%2L(GYe3S4p^Lgw!-8DW`WK7
z1zvGZVqux=AjL9q1INS#ER*zDCiC)fOkQsyGFd=`lf%&`INsIMFJ$sZUIm~a&t?f}
XLCeVnX)Me@naS}X8k@sIekcF{zj;3L

delta 407
zcmezIg7N$-#tp4JV&V)84DJD*{_)O^zOF%z@j)(r2Jw!Q1;sTcFR;>>e8CEvk^sU=
z{0s@30#Tv@v`7bJk*FBDTb%vChTu~XfT{wUe~bt!2_US*&zP_&ASHz?Dw7Y0vuu9J
z|BQ2TfDq4Q1uKrpy(~PF7f6Xr)^q1%3l8v%cMhJcD53xq;@RvVC1^SMf}h^zhTtCx
E03ZByBme*a

diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.dtsi
index b3725c4..571c716 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.h
index 4437411..5d33dab 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_adc.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.dtsi
index 93b8961..1683880 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.h
index f3dd65c..aeb8a1f 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_clk_buf.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.dtsi
index 975b8b9..a0e73ff 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
@@ -30,6 +30,13 @@
 		debounce = <61 0>;
 	};
 
+	ALS@65 {
+		compatible = "mediatek, ALS-eint";
+		interrupt-parent = <&eintc>;
+		interrupts = <65 8>;
+		debounce = <65 0>;
+	};
+
 	GYRO@67 {
 		compatible = "mediatek, GYRO-eint";
 		interrupt-parent = <&eintc>;
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.h
index 1078e44..1697a18 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
@@ -33,6 +33,11 @@ extern "C" {
 #define CUST_EINT_GSE_1_TYPE							CUST_EINTF_TRIGGER_HIGH
 #define CUST_EINT_GSE_1_DEBOUNCE_EN      CUST_EINT_DEBOUNCE_DISABLE
 
+#define CUST_EINT_ALS_NUM              65
+#define CUST_EINT_ALS_DEBOUNCE_CN      0
+#define CUST_EINT_ALS_TYPE							CUST_EINTF_TRIGGER_LOW
+#define CUST_EINT_ALS_DEBOUNCE_EN      CUST_EINT_DEBOUNCE_DISABLE
+
 #define CUST_EINT_GYRO_NUM              67
 #define CUST_EINT_GYRO_DEBOUNCE_CN      0
 #define CUST_EINT_GYRO_TYPE							CUST_EINTF_TRIGGER_LOW
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint_md1.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint_md1.h
index ae1cc92..47a3d5b 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint_md1.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_eint_md1.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio.dtsi
index 65d08f1..c144a7e 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_boot.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_boot.h
index c74f0b1..0ab9462 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_boot.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_boot.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_usage.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_usage.h
index e0980d1..0b9175d 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_usage.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_gpio_usage.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
@@ -320,10 +320,17 @@
 #define GPIO_OTG_DRVVBUS_PIN_M_CLK   GPIO_MODE_05
 #define GPIO_OTG_DRVVBUS_PIN_M_KCOL   GPIO_MODE_06
 
-#define GPIO_SPI_CS_PIN         (GPIO65 | 0x80000000)
+#define GPIO_ALS_EINT_PIN         (GPIO65 | 0x80000000)
+#define GPIO_ALS_EINT_PIN_M_GPIO   GPIO_MODE_00
+#define GPIO_ALS_EINT_PIN_M_KROW   GPIO_MODE_04
+#define GPIO_ALS_EINT_PIN_M_SPI_CSA   GPIO_MODE_01
+#define GPIO_ALS_EINT_PIN_M_EINT   GPIO_ALS_EINT_PIN_M_GPIO
+
+
+#define GPIO_SPI_CS_PIN         (GPIO87 | 0x80000000)
 #define GPIO_SPI_CS_PIN_M_GPIO   GPIO_MODE_00
-#define GPIO_SPI_CS_PIN_M_KROW   GPIO_MODE_04
-#define GPIO_SPI_CS_PIN_M_SPI_CSA   GPIO_MODE_01
+#define GPIO_SPI_CS_PIN_M_KCOL   GPIO_MODE_04
+#define GPIO_SPI_CS_PIN_M_SPI_CKA   GPIO_MODE_01
 
 #define GPIO_SPI_SCK_PIN         (GPIO66 | 0x80000000)
 #define GPIO_SPI_SCK_PIN_M_GPIO   GPIO_MODE_00
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.dtsi
index 44d54df..030ffe5 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.h
index 0b3f4c3..57d69f6 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_i2c.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.dtsi
index a9d9d67..143e88c 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.h
index 7faa797..610ae9b 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_kpd.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_md1_eint.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_md1_eint.dtsi
index f637409..28ef6f5 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_md1_eint.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_md1_eint.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_pmic.dtsi b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_pmic.dtsi
index d18423c..6e019df 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_pmic.dtsi
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_pmic.dtsi
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_power.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_power.h
index 904064d..a88ab74 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_power.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/cust_power.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/mt6735m-pinfunc.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/mt6735m-pinfunc.h
index 0e22c60..4f71124 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/mt6735m-pinfunc.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/mt6735m-pinfunc.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pinctrl-mtk-mt6735.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pinctrl-mtk-mt6735.h
index d7d5426..361eaf8 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pinctrl-mtk-mt6735.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pinctrl-mtk-mt6735.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.c b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.c
index 27b0528..0d1bc2d 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.c
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.c
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.h
index 910fd44..01592ac 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/dct/dct/pmic_drv.h
@@ -1,6 +1,6 @@
 /*
  * Generated by MTK SP DrvGen Version 03.13.6 for MT6735M. Copyright MediaTek Inc. (C) 2013.
- * Sun May 01 22:37:41 2016
+ * Tue May 03 15:52:22 2016
  * Do Not Modify the File.
  */
 
diff --git a/drivers/power/88pm860x_charger.c b/drivers/power/88pm860x_charger.c
index 1ef35ab..36fb4b5 100755
--- a/drivers/power/88pm860x_charger.c
+++ b/drivers/power/88pm860x_charger.c
@@ -711,7 +711,6 @@ static int pm860x_charger_probe(struct platform_device *pdev)
 	return 0;
 
 out_irq:
-	power_supply_unregister(&info->usb);
 	while (--i >= 0)
 		free_irq(info->irq[i], info);
 out:
diff --git a/drivers/power/lp8788-charger.c b/drivers/power/lp8788-charger.c
index 72da2a6..ed49b50 100755
--- a/drivers/power/lp8788-charger.c
+++ b/drivers/power/lp8788-charger.c
@@ -417,10 +417,8 @@ static int lp8788_psy_register(struct platform_device *pdev,
 	pchg->battery.num_properties = ARRAY_SIZE(lp8788_battery_prop);
 	pchg->battery.get_property = lp8788_battery_get_property;
 
-	if (power_supply_register(&pdev->dev, &pchg->battery)) {
-		power_supply_unregister(&pchg->charger);
+	if (power_supply_register(&pdev->dev, &pchg->battery))
 		return -EPERM;
-	}
 
 	return 0;
 }
diff --git a/drivers/power/mediatek/battery_meter.c b/drivers/power/mediatek/battery_meter.c
index 4ee7603..a682c88 100755
--- a/drivers/power/mediatek/battery_meter.c
+++ b/drivers/power/mediatek/battery_meter.c
@@ -2786,7 +2786,7 @@ void battery_meter_set_reset_soc(kal_bool bUSE_UI_SOC)
 kal_int32 battery_meter_get_battery_soc(void)
 {
 #if defined(SOC_BY_HW_FG)
-	return gFG_capacity_by_v;
+	return gFG_capacity_by_c;
 #else
 	return 50;
 #endif
@@ -2866,7 +2866,7 @@ kal_int32 battery_meter_get_battery_percentage(void)
 	} else {
 		fgauge_algo_run();
 		#if !defined(CUST_CAPACITY_OCV2CV_TRANSFORM)
-		return gFG_capacity_by_v;	/* hw fg, //return gfg_percent_check_point; // voltage mode */
+		return gFG_capacity_by_c;	/* hw fg, //return gfg_percent_check_point; // voltage mode */
 		#else
 		/* We keep gFG_capacity_by_c as capacity before compensation */
 		/* Compensated capacity is returned for UI SOC tracking */
diff --git a/drivers/power/wm831x_power.c b/drivers/power/wm831x_power.c
index 3ccadf6..3bed2f5 100755
--- a/drivers/power/wm831x_power.c
+++ b/drivers/power/wm831x_power.c
@@ -567,7 +567,7 @@ static int wm831x_power_probe(struct platform_device *pdev)
 
 	irq = wm831x_irq(wm831x, platform_get_irq_byname(pdev, "SYSLO"));
 	ret = request_threaded_irq(irq, NULL, wm831x_syslo_irq,
-				   IRQF_TRIGGER_RISING | IRQF_ONESHOT, "System power low",
+				   IRQF_TRIGGER_RISING, "System power low",
 				   power);
 	if (ret != 0) {
 		dev_err(&pdev->dev, "Failed to request SYSLO IRQ %d: %d\n",
@@ -577,7 +577,7 @@ static int wm831x_power_probe(struct platform_device *pdev)
 
 	irq = wm831x_irq(wm831x, platform_get_irq_byname(pdev, "PWR SRC"));
 	ret = request_threaded_irq(irq, NULL, wm831x_pwr_src_irq,
-				   IRQF_TRIGGER_RISING | IRQF_ONESHOT, "Power source",
+				   IRQF_TRIGGER_RISING, "Power source",
 				   power);
 	if (ret != 0) {
 		dev_err(&pdev->dev, "Failed to request PWR SRC IRQ %d: %d\n",
@@ -590,7 +590,7 @@ static int wm831x_power_probe(struct platform_device *pdev)
 				 platform_get_irq_byname(pdev,
 							 wm831x_bat_irqs[i]));
 		ret = request_threaded_irq(irq, NULL, wm831x_bat_irq,
-					   IRQF_TRIGGER_RISING | IRQF_ONESHOT,
+					   IRQF_TRIGGER_RISING,
 					   wm831x_bat_irqs[i],
 					   power);
 		if (ret != 0) {
diff --git a/tools/dct/DCT.log b/tools/dct/DCT.log
index ba1cbf9..e69de29 100644
--- a/tools/dct/DCT.log
+++ b/tools/dct/DCT.log
@@ -1,10 +0,0 @@
-/* Log generated by MTK SP DrvGen Version 03.13.6;
- Log Time is Sun May 01 22:34:04 2016
- */
-open operater parse MT6735M.fig OK!
-Edit operater parse .cmp file OK!
-open operater parse MT6735M.fig OK!
-Edit operater parse .cmp file OK!
-Gencode operater parse .cmp file OK!
-Gencode cust_eint_md1.h OK!
-Gencode cust_power.h OK!
diff --git "a/\320\275\320\276\320\262\321\213\320\271 \321\204\320\260\320\271\320\273" "b/\320\275\320\276\320\262\321\213\320\271 \321\204\320\260\320\271\320\273"
index beab282..631f6bd 100644
--- "a/\320\275\320\276\320\262\321\213\320\271 \321\204\320\260\320\271\320\273"	
+++ "b/\320\275\320\276\320\262\321\213\320\271 \321\204\320\260\320\271\320\273"	
@@ -5,6 +5,10 @@ export CROSS_COMPILE=/home/olegsvs/Android/aarch64-linux-android-4.9/bin/aarch64
 
 export CROSS_COMPILE=aarch64-
 export PATH=/home/olegsvs/5/aarch64-linux-gnu-5.3/bin:$PATH
+
+
+
+export CROSS_COMPILE=/home/olegsvs/Android/aarch64-linux-android-4.9/bin/aarch64-linux-android-
 export ARCH=arm64 export ARCH_MTK_PLATFORM=mt6735m 
 make benefit_m7_defconfig
 make -j5
-- 
2.7.4

