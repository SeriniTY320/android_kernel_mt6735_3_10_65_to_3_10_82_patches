From f6e217d9be82a35fa04828ce3e3fdce2889223b9 Mon Sep 17 00:00:00 2001
From: olegsvs <oleg.texet@gmail.com>
Date: Fri, 6 May 2016 22:26:46 +0300
Subject: [PATCH 1050/1168] BATTERY CHARGERgit add . !

---
 README.md                                          |   44 +-
 .../jd9365_6735_dsi_video/jd9365_6735_dsi_video.c  |  416 +----
 .../jd9365_6735_dsi_video/jd9365_6735_dsi_video.c2 | 1006 +++++++++++++
 .../mt6735/benefit_m7/power/cust_battery_meter.h   |    6 +-
 .../benefit_m7/power/cust_battery_meter_table.h    | 1589 ++++++++++----------
 .../mach/mt6735/benefit_m7/power/cust_charging.h   |    2 +-
 drivers/power/mediatek/battery_meter.c             |    4 +-
 include/generated/compile.h                        |    4 +-
 8 files changed, 1944 insertions(+), 1127 deletions(-)
 create mode 100644 drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c2

diff --git a/README.md b/README.md
index b6c63b9..8afe1c6 100644
--- a/README.md
+++ b/README.md
@@ -2,26 +2,28 @@
 
 Big Thanks To
 
-@abgoyal abgoyal 
-@blackaxe1225 blackaxe1225 
-@divis1969 divis1969
-@Dinolek Dinolek
-@dmurimi14 dmurimi14 
-@DQuest DQuest 
-@gueste gueste 
-@pscamodio pscamodio 
-@huyparody huyparody 
-@micbanand micbanand 
-@mohamedhagag mohamedhagag 
-@mukulsoni mukulsoni
-@neohackt neohackt 
-@Netmatrix Netmatrix 
-@rombaby rombaby 
-@SdtBarbarossa SdtBarbarossa 
-@tiltkoko tiltkoko 
-@hecatae hecatae 
-@UNwS UNwS 
-@vipintm vipintm 
-@walter79 walter79 
+@visi0nary
+@Zormax
+@abgoyal  
+@blackaxe1225  
+@divis1969 
+@Dinolek 
+@dmurimi14  
+@DQuest  
+@gueste  
+@pscamodio  
+@huyparody  
+@micbanand  
+@mohamedhagag  
+@mukulsoni 
+@neohackt  
+@Netmatrix  
+@rombaby  
+@SdtBarbarossa  
+@tiltkoko  
+@hecatae 
+@UNwS 
+@vipintm
+@walter79
 
 
diff --git a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
index 62125d3..0d9ac89 100644
--- a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
+++ b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c
@@ -109,9 +109,7 @@
 #ifndef FALSE
     #define FALSE 0
 #endif
-#ifdef CONFIG_DOUBLETAP2WAKE
-#include <linux/input/doubletap2wake.h>
-#endif
+
 // ---------------------------------------------------------------------------
 //  Local Variables
 // ---------------------------------------------------------------------------
@@ -157,6 +155,7 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 {0xE3,1,{0xF8}},
 
 //--- Sequence Ctrl ----//
+
 //{0x80,1,{0x02}},
 
 //--- Page1  ----//
@@ -164,13 +163,10 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 
 //Set VCOM
 {0x00,1,{0x00}},
-{0x01,1,{0xBA}},
+{0x01,1,{0xB0}},
 {0x03,1,{0x00}},
-{0x04,1,{0x75}},
-{0x17,1,{0x00}},
-{0x18,1,{0xA0}},
-{0x19,1,{0x05}},
-/*{0x0C,1,{0x74}},
+{0x04,1,{0xB0}},
+{0x0C,1,{0x74}},
 
 //Set Gamma Power,1,{ VGMP,1,{VGMN,1,{VGSP,1,{VGSN
 {0x17,1,{0x00}},
@@ -281,21 +277,21 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 {0x16,1,{0x44}},
 {0x17,1,{0x46}},
 {0x18,1,{0x48}},
-{0x19,1,{0x4A}},*/
-{0x1A,1,{0x00}},
-{0x1B,1,{0xA0}},
-{0x1C,1,{0x05}},
-{0x1F,1,{0x2F}},
-/*{0x1E,1,{0x1F}},
-{0x1F,1,{0x1F}},*/
-{0x20,1,{0x23}},
-{0x21,1,{0x23}},
-{0x22,1,{0x4F}},
-//{0x23,1,{0x1F}},
-//{0x24,1,{0x1F}},
-//{0x25,1,{0x1E}},
-{0x26,1,{0xF1}},
-/*{0x27,1,{0x1E}},
+{0x19,1,{0x4A}},
+{0x1A,1,{0x40}},
+{0x1B,1,{0x42}},
+{0x1C,1,{0x1F}},
+{0x1D,1,{0x1F}},
+{0x1E,1,{0x1F}},
+{0x1F,1,{0x1F}},
+{0x20,1,{0x1F}},
+{0x21,1,{0x1F}},
+{0x22,1,{0x1F}},
+{0x23,1,{0x1F}},
+{0x24,1,{0x1F}},
+{0x25,1,{0x1E}},
+{0x26,1,{0x1E}},
+{0x27,1,{0x1E}},
 {0x28,1,{0x1F}},
 {0x29,1,{0x1F}},
 {0x2A,1,{0x1E}},
@@ -312,21 +308,21 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 {0x33,1,{0x1F}}, 
 {0x34,1,{0x1F}}, 
 {0x35,1,{0x1F}}, 
-{0x36,1,{0x1F}}, */
-{0x37,1,{0x09}}, 
-{0x38,1,{0x04}}, 
-{0x39,1,{0x0C}}, 
-{0x3A,1,{0x18}}, 
-//{0x3B,1,{0x1E}}, 
-{0x3C,1,{0x78}}, 
-/*{0x3D,1,{0x1E}}, 
+{0x36,1,{0x1F}}, 
+{0x37,1,{0x1F}}, 
+{0x38,1,{0x1F}}, 
+{0x39,1,{0x1F}}, 
+{0x3A,1,{0x1F}}, 
+{0x3B,1,{0x1E}}, 
+{0x3C,1,{0x1E}}, 
+{0x3D,1,{0x1E}}, 
 {0x3E,1,{0x1F}}, 
-{0x3F,1,{0x1F}}, */
-{0x40,1,{0x04}}, 
-{0x41,1,{0xA0}},
+{0x3F,1,{0x1F}}, 
+{0x40,1,{0x1F}}, 
+{0x41,1,{0x1E}},
  
 //GIP_R_GS Pin mapping
-/*{0x42,1,{0x0B}},
+{0x42,1,{0x0B}},
 {0x43,1,{0x09}},   
 {0x44,1,{0x07}}, 
 {0x45,1,{0x05}}, 
@@ -344,197 +340,60 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 {0x51,1,{0x1E}}, 
 {0x52,1,{0x1E}}, 
 {0x53,1,{0x1E}}, 
-{0x54,1,{0x1F}}, */
-{0x55,1,{0x01}}, 
-{0x56,1,{0x01}}, 
-{0x57,1,{0x69}}, 
+{0x54,1,{0x1F}}, 
+{0x55,1,{0x1F}}, 
+{0x56,1,{0x1F}}, 
+{0x57,1,{0x1E}}, 
 
 //GIP Timing  
-{0x58,1,{0x0A}}, 
-{0x59,1,{0x2A}}, 
-{0x5A,1,{0x29}}, 
-{0x5B,1,{0x10}}, 
-{0x5C,1,{0x16}}, 
-{0x5D,1,{0x70}}, 
-{0x5E,1,{0x54}}, 
-{0x5F,1,{0x43}}, 
-{0x60,1,{0x34}}, 
-{0x61,1,{0x2F}}, 
-{0x62,1,{0x1F}}, 
-{0x63,1,{0x23}}, 
-{0x64,1,{0x0C}},
-{0x65,1,{0x23}},
-{0x66,1,{0x1F}},
-{0x67,1,{0x1E}},
-{0x68,1,{0x3A}},
-{0x69,1,{0x28}},
-{0x6A,1,{0x34}},
-{0x6B,1,{0x27}}, 
-{0x6C,1,{0x26}}, 
-{0x6D,1,{0x1C}}, 
-{0x6E,1,{0x0F}}, 
-{0x6F,1,{0x02}}, 
-{0x70,1,{0x70}}, 
-{0x71,1,{0x54}}, 
-{0x72,1,{0x43}}, 
-{0x73,1,{0x34}}, 
-{0x74,1,{0x2F}}, 
-{0x75,1,{0x1F}}, 
-{0x76,1,{0x23}}, 
-{0x77,1,{0x0C}}, 
-{0x78,1,{0x23}}, 
-{0x79,1,{0x1F}}, 
-{0x7A,1,{0x1E}}, 
-{0x7B,1,{0x3A}}, 
-{0x7C,1,{0x28}}, 
-{0x7D,1,{0x34}}, 
-{0x7E,1,{0x27}}, 
-{0x7F,1,{0x26}}, 
-{0x80,1,{0x1C}}, 
-{0x81,1,{0x0F}}, 
-{0x82,1,{0x02}}, 
-
-
-{0xE0,1,{0x02}}, //ESD
-{0x01,1,{0x04}}, 
-{0x02,1,{0x0A}}, 
-{0x01,1,{0x08}}, 
-{0x04,1,{0x00}}, 
-{0x05,1,{0x02}}, 
-{0x06,1,{0x1F}}, 
-{0x07,1,{0x1F}}, 
-{0x08,1,{0x1F}}, 
-{0x09,1,{0x1F}}, 
-{0x0A,1,{0x1F}}, 
-{0x0B,1,{0x1F}}, 
-{0x0C,1,{0x1F}}, 
-{0x0D,1,{0x1F}}, 
-{0x0E,1,{0x1F}}, 
-{0x0F,1,{0x04}}, 
-{0x10,1,{0x1F}}, 
-{0x11,1,{0x1F}}, 
-{0x12,1,{0x1F}}, 
-{0x13,1,{0x1F}}, 
-{0x14,1,{0x1F}}, 
-{0x15,1,{0x1E}}, 
-{0x16,1,{0x07}}, 
-{0x17,1,{0x05}}, 
-{0x18,1,{0x0B}}, 
-{0x19,1,{0x09}}, 
-{0x1A,1,{0x01}}, 
-{0x1B,1,{0x03}}, 
-{0x1C,1,{0x1F}}, 
-{0x1D,1,{0x1F}}, 
-{0x1E,1,{0x1F}}, 
-{0x1F,1,{0x1F}}, 
-{0x20,1,{0x1F}}, 
-{0x21,1,{0x1F}}, 
-{0x22,1,{0x1F}}, 
-{0x23,1,{0x1F}}, 
-{0x24,1,{0x1F}}, 
-{0x25,1,{0x1F}}, 
-{0x26,1,{0x1F}}, 
-{0x27,1,{0x1F}}, 
-{0x28,1,{0x1F}}, 
-{0x29,1,{0x11}}, 
-{0x2A,1,{0x1F}}, 
-{0x2B,1,{0x1E}}, 
-{0x2C,1,{0x09}}, 
-{0x2D,1,{0x0B}}, 
-{0x2E,1,{0x05}}, 
-{0x2F,1,{0x07}}, 
-{0x30,1,{0x03}}, 
-{0x31,1,{0x01}}, 
-{0x32,1,{0x1F}}, 
-{0x33,1,{0x1F}}, 
-{0x34,1,{0x1F}}, 
-{0x35,1,{0x1F}}, 
-{0x36,1,{0x1F}}, 
-{0x37,1,{0x1F}}, 
-{0x38,1,{0x1F}}, 
-{0x39,1,{0x1F}}, 
-{0x3A,1,{0x1F}}, 
-{0x3B,1,{0x1F}}, 
-{0x3C,1,{0x1F}}, 
-{0x3D,1,{0x1F}}, 
-{0x3E,1,{0x1F}}, 
-{0x3F,1,{0x11}}, 
-{0x40,1,{0x1E}},
-{0x41,1,{0x1F}},
-{0x42,1,{0x08}},
-{0x43,1,{0x0A}}, 
-{0x44,1,{0x04}}, 
-{0x45,1,{0x06}}, 
-{0x46,1,{0x02}}, 
-{0x47,1,{0x00}}, 
-{0x48,1,{0x1F}}, 
-{0x49,1,{0x1F}}, 
-{0x4A,1,{0x1F}},
-{0x4B,1,{0x1F}},
-{0x4C,1,{0x1F}},
-{0x4D,1,{0x1F}},
-{0x4E,1,{0x1F}},
-{0x4F,1,{0x1F}},
-{0x50,1,{0x1F}},
-{0x51,1,{0x1F}},
-{0x52,1,{0x1F}},
-{0x53,1,{0x1F}}, 
-{0x54,1,{0x1F}}, 
-{0x55,1,{0x10}}, 
-{0x56,1,{0x1E}}, 
-{0x57,1,{0x1F}}, 
 {0x58,1,{0x40}}, 
 {0x59,1,{0x00}}, 
-{0x5A,1,{0x00}},
-{0x5B,1,{0x30}},
-{0x5C,1,{0x07}},
-{0x5D,1,{0x30}},
-{0x5E,1,{0x00}},
-{0x5F,1,{0x00}},
-{0x60,1,{0x30}},
-{0x61,1,{0x00}},
-{0x62,1,{0x00}},
-{0x63,1,{0x03}}, 
-{0x64,1,{0x6B}}, 
-{0x65,1,{0x60}}, 
-{0x66,1,{0x02}}, 
-{0x67,1,{0x73}}, 
-{0x68,1,{0x0C}}, 
-{0x69,1,{0x06}}, 
-{0x6A,1,{0x6B}},
-{0x6B,1,{0x07}},
-{0x6C,1,{0x00}},
-{0x6D,1,{0x00}},
-{0x6E,1,{0x00}},
-{0x6F,1,{0x00}},
-{0x70,1,{0x00}},
-{0x71,1,{0x00}},
-{0x72,1,{0x06}},
-{0x73,1,{0x86}}, 
+{0x5A,1,{0x00}}, 
+{0x5B,1,{0x30}}, 
+{0x5C,1,{0x08}}, 
+{0x5D,1,{0x40}}, 
+{0x5E,1,{0x01}}, 
+{0x5F,1,{0x02}}, 
+{0x60,1,{0x00}}, 
+{0x61,1,{0x01}}, 
+{0x62,1,{0x02}}, 
+{0x63,1,{0x69}}, 
+{0x64,1,{0x6A}},
+{0x65,1,{0x00}},
+{0x66,1,{0x00}},
+{0x67,1,{0x74}},
+{0x68,1,{0x0A}},
+{0x69,1,{0x69}},
+{0x6A,1,{0x6A}},
+{0x6B,1,{0x10}}, 
+{0x6C,1,{0x00}}, 
+{0x6D,1,{0x04}}, 
+{0x6E,1,{0x04}}, 
+{0x6F,1,{0x88}}, 
+{0x70,1,{0x00}}, 
+{0x71,1,{0x00}}, 
+{0x72,1,{0x06}}, 
+{0x73,1,{0x7B}}, 
 {0x74,1,{0x00}}, 
-{0x75,1,{0x07}}, 
+{0x75,1,{0x87}}, 
 {0x76,1,{0x00}}, 
 {0x77,1,{0x5D}}, 
-{0x78,1,{0x14}}, 
-{0x79,1,{0x00}}, 
-{0x7A,1,{0x05}},
-{0x7B,1,{0x05}},
-{0x7C,1,{0x00}},
-{0x7D,1,{0x03}},
-{0x7E,1,{0x86}},
-{0x7F,1,{0x00}},
+{0x78,1,{0x17}}, 
+{0x79,1,{0x1F}}, 
+{0x7A,1,{0x00}}, 
+{0x7B,1,{0x00}}, 
+{0x7C,1,{0x00}}, 
+{0x7D,1,{0x03}}, 
+{0x7E,1,{0x7B}}, 
+
+{0xE0,1,{0x04}}, //ESD
+{0x2B,1,{0x2B}}, 
+{0x2E,1,{0x44}}, 
 //Page0
-{0xE0,1,{0x04}},
-{0x0E,1,{0x48}},
-{0x2B,1,{0x2B}},
-{0x2E,1,{0x44}},
 {0xE0,1,{0x00}},
+//open watch dog
 {0xE6,1,{0x02}},
 {0xE7,1,{0x02}},
-{0x11,1,{0x00}},
-
-//open watch dog
-{REGFLAG_DELAY,120,{}},
 
 {0x35,1,{0x00}},
 
@@ -548,28 +407,8 @@ static struct LCM_setting_table lcm_initialization_setting[] = {
 
 {REGFLAG_END_OF_TABLE,0x00,{}}
 };
-/*
-    // Sleep Out
-    {0x11, 0, {0x00}},
-    {REGFLAG_DELAY, 120, {}},
 
-    // Display ON
-    {0x29, 0, {0x00}},
-    {REGFLAG_DELAY, 10, {}},
-    
-    //{REGFLAG_END_OF_TABLE, 0x00, {}}
-};
-
-static struct LCM_setting_table lcm_sleep_mode_in_setting[] = {
-    // Display off sequence
-    {0x28, 0, {0x00}},
-    {REGFLAG_DELAY, 10, {}},
 
-    // Sleep Mode On
-	{0x10, 0, {0x00}},
-	{REGFLAG_DELAY, 120, {}},
-	//{REGFLAG_END_OF_TABLE, 0x00, {}}
-};*/
 static struct LCM_setting_table lcm_sleep_out_setting[] = {
 	// Sleep Out
 	{0x11, 1, {0x00}},
@@ -598,9 +437,6 @@ static struct LCM_setting_table lcm_sleep_in_setting[] = {
 	{REGFLAG_END_OF_TABLE, 0x00, {}}
 };
 
-
-
-
 static void push_table(struct LCM_setting_table *table, unsigned int count,
 		unsigned char force_update)
 {
@@ -641,9 +477,9 @@ static void lcm_set_util_funcs(const LCM_UTIL_FUNCS * util)
 
 static void lcm_get_params(LCM_PARAMS * params)
 {
-//	memset(params, 0, sizeof(LCM_PARAMS));
+	memset(params, 0, sizeof(LCM_PARAMS));
 
-	/*params->type = LCM_TYPE_DSI;
+	params->type = LCM_TYPE_DSI;
 
 	params->width = FRAME_WIDTH;
 	params->height = FRAME_HEIGHT;
@@ -660,7 +496,7 @@ static void lcm_get_params(LCM_PARAMS * params)
 
 	// DSI
 	/* Command mode setting */
-	/*	params->dsi.LANE_NUM				= LCM_FOUR_LANE;
+		params->dsi.LANE_NUM				= LCM_FOUR_LANE;
 	
 	//The following defined the fomat for data coming from LCD engine.
 	params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
@@ -703,99 +539,8 @@ static void lcm_get_params(LCM_PARAMS * params)
 		
 		params->dsi.cont_clock=1;
 */
-		//params->dsi.PLL_CLOCK=215;
-	memset(params, 0, sizeof(LCM_PARAMS));
-	
-		params->type   = LCM_TYPE_DSI;
-
-		params->width  = FRAME_WIDTH;
-		params->height = FRAME_HEIGHT;
-
-		// enable tearing-free
-		params->dbi.te_mode 				= LCM_DBI_TE_MODE_DISABLED;
-		params->dbi.te_edge_polarity		= LCM_POLARITY_RISING;
-
-#if (LCM_DSI_CMD_MODE)
-		params->dsi.mode   = CMD_MODE;
-#else
-		params->dsi.mode   = SYNC_PULSE_VDO_MODE;
-#endif
-	
-		// DSI
-		/* Command mode setting */
-		params->dsi.LANE_NUM				= LCM_FOUR_LANE;
-		//The following defined the fomat for data coming from LCD engine.
-		params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
-		params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
-		params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
-		params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;
-
-		// Highly depends on LCD driver capability.
-		// Not support in MT6573
-		params->dsi.packet_size=256;
-
-		// Video mode setting		
-		params->dsi.intermediat_buffer_num = 2;
-
-		params->dsi.PS=LCM_PACKED_PS_24BIT_RGB888;
-
-		params->dsi.vertical_sync_active				= 4;// 4;2
-		params->dsi.vertical_backporch					= 8;// 8;2
-		params->dsi.vertical_frontporch					= 12;// 8;2
-		params->dsi.vertical_active_line				= FRAME_HEIGHT; 
-
-		params->dsi.horizontal_sync_active				= 10;//6
-		params->dsi.horizontal_backporch				= 10;//37
-		params->dsi.horizontal_frontporch				= 20;//37
-		params->dsi.horizontal_active_pixel				= FRAME_WIDTH;
-
-		params->dsi.PLL_CLOCK=213;
-
-		/* ESD or noise interference recovery For video mode LCM only. */ // Send TE packet to LCM in a period of n frames and check the response. 
-		params->dsi.lcm_int_te_monitor = FALSE; 
-		params->dsi.lcm_int_te_period = 1; // Unit : frames 
- 
-		// Need longer FP for more opportunity to do int. TE monitor applicably. 
-		if(params->dsi.lcm_int_te_monitor) 
-			params->dsi.vertical_frontporch *= 2; 
- 
-		// Monitor external TE (or named VSYNC) from LCM once per 2 sec. (LCM VSYNC must be wired to baseband TE pin.) 
-		//params->dsi.lcm_ext_te_monitor = FALSE; 
-		// Non-continuous clock 
-	//	params->dsi.noncont_clock = TRUE; 
-		//params->dsi.noncont_clock_period = 2; // Unit : frames
+		params->dsi.PLL_CLOCK=215;
 }
-/* 
-  params->physical_width = 720;
-  params->dsi.packet_size = 256;
-  params->type = 2;
-  params->dsi.data_format.format = 2;
-  params->dsi.PS = 2;
-  params->dsi.word_count = 2160;
-  params->dsi.vertical_backporch = 15;
-  params->dsi.horizontal_frontporch = 30;
-  params->dsi.PLL_CLOCK = 195;
-  params->dsi.lcm_esd_check_table[0].cmd = 10;
-  params->dsi.lcm_esd_check_table[0].para_list[0] = -100;
-  params->width = 720;
-  params->dsi.horizontal_active_pixel = 720;
-  params->height = 1280;
-  params->dsi.vertical_active_line = 1280;
-  params->dsi.mode = 1;
-  params->dsi.esd_check_enable = 1;
-  params->dsi.customization_esd_check_enable = 1;
-  params->dsi.lcm_esd_check_table[0].count = 1;
-  params->dsi.LANE_NUM = 4;
-  params->dsi.vertical_sync_active = 4;
-  params->dsi.vertical_frontporch = 4;
-  params->dsi.data_format.color_order = 0;
-  params->dsi.data_format.trans_seq = 0;
-  params->dsi.data_format.padding = 0;
-  params->dsi.intermediat_buffer_num = 0;
-  params->dsi.horizontal_sync_active = 20;
-  params->dsi.horizontal_backporch = 20;*/
-
-
 
 static void lcm_init(void)
 {
@@ -824,7 +569,6 @@ static void lcm_suspend(void)
  	array[0] = 0x014f1500;// read id return two byte,version and id
 	dsi_set_cmdq(&array, 1, 1);
 	MDELAY(50);
-
 }
 
 
@@ -836,7 +580,7 @@ static void lcm_resume(void)
 	//lcm_compare_id();
 //	push_table(lcm_sleep_out_setting,sizeof(lcm_sleep_out_setting) /sizeof(struct LCM_setting_table), 1);
 	lcm_init();
-
+			
 /*array[0] = 0x00063902;// read id return two byte,version and id
 	array[1] = 0x52AA55F0;
 	array[2] = 0x00000108;
diff --git a/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c2 b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c2
new file mode 100644
index 0000000..62125d3
--- /dev/null
+++ b/drivers/misc/mediatek/lcm/jd9365_6735_dsi_video/jd9365_6735_dsi_video.c2
@@ -0,0 +1,1006 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein
+ * is confidential and proprietary to MediaTek Inc. and/or its licensors.
+ * Without the prior written permission of MediaTek inc. and/or its licensors,
+ * any reproduction, modification, use or disclosure of MediaTek Software,
+ * and information contained herein, in whole or in part, shall be strictly prohibited.
+ */
+/* MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
+ * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+ * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+ * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+ * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
+ * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
+ * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
+ * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
+ * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
+ * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+ * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+ * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
+ * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek Software")
+ * have been modified by MediaTek Inc. All revisions are subject to any receiver's
+ * applicable license agreements with MediaTek Inc.
+ */
+
+/*****************************************************************************
+*  Copyright Statement:
+*  --------------------
+*  This software is protected by Copyright and the information contained
+*  herein is confidential. The software may not be copied and the information
+*  contained herein may not be used or disclosed except with the written
+*  permission of MediaTek Inc. (C) 2008
+*
+*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
+*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
+*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
+*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
+*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
+*
+*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
+*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
+*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+*
+*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
+*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
+*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
+*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
+*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
+*
+*****************************************************************************/
+
+
+#ifdef BUILD_LK
+#else
+#include <linux/string.h>
+#if defined(BUILD_UBOOT)
+#include <asm/arch/mt_gpio.h>
+#else
+#include <mach/mt_gpio.h>
+#include <mach/mt_pm_ldo.h>
+#endif
+#endif
+#include "lcm_drv.h"
+
+#if defined(BUILD_LK)
+#else
+
+#include <linux/proc_fs.h>   //proc file use 
+#endif
+
+
+// ---------------------------------------------------------------------------
+//  Local Constants
+// ---------------------------------------------------------------------------
+
+#define FRAME_WIDTH  										(720)
+#define FRAME_HEIGHT 										(1280)
+#define LCM_ID_JD9365   									0x9365
+
+#define REGFLAG_DELAY             							(0XFFFE)
+#define REGFLAG_END_OF_TABLE      							(0xF100)	// END OF REGISTERS MARKER
+
+
+#define LCM_DSI_CMD_MODE									0
+
+#ifndef TRUE
+    #define TRUE 1
+#endif
+
+#ifndef FALSE
+    #define FALSE 0
+#endif
+#ifdef CONFIG_DOUBLETAP2WAKE
+#include <linux/input/doubletap2wake.h>
+#endif
+// ---------------------------------------------------------------------------
+//  Local Variables
+// ---------------------------------------------------------------------------
+
+static LCM_UTIL_FUNCS lcm_util = {0};
+
+#define SET_RESET_PIN(v)    								(lcm_util.set_reset_pin((v)))
+
+#define UDELAY(n) 											(lcm_util.udelay(n))
+#define MDELAY(n) 											(lcm_util.mdelay(n))
+
+
+
+static unsigned int lcm_esd_test = FALSE;      ///only for ESD test
+
+// ---------------------------------------------------------------------------
+//  Local Functions
+// ---------------------------------------------------------------------------
+
+#define dsi_set_cmdq_V2(cmd, count, ppara, force_update)	lcm_util.dsi_set_cmdq_V2(cmd, count, ppara, force_update)
+#define dsi_set_cmdq(pdata, queue_size, force_update)		lcm_util.dsi_set_cmdq(pdata, queue_size, force_update)
+#define wrtie_cmd(cmd)										lcm_util.dsi_write_cmd(cmd)
+#define write_regs(addr, pdata, byte_nums)					lcm_util.dsi_write_regs(addr, pdata, byte_nums)
+#define read_reg(cmd)											lcm_util.dsi_dcs_read_lcm_reg(cmd)
+#define read_reg_v2(cmd, buffer, buffer_size)				lcm_util.dsi_dcs_read_lcm_reg_v2(cmd, buffer, buffer_size)
+
+ struct LCM_setting_table {
+    unsigned cmd;
+    unsigned char count;
+    unsigned char para_list[64];
+};
+
+
+static struct LCM_setting_table lcm_initialization_setting[] = {
+//------------------JD9365 initial code------------------------//
+
+//Page0
+{0xE0,1,{0x00}},
+
+//--- PASSWORD  ----//
+{0xE1,1,{0x93}},
+{0xE2,1,{0x65}},
+{0xE3,1,{0xF8}},
+
+//--- Sequence Ctrl ----//
+//{0x80,1,{0x02}},
+
+//--- Page1  ----//
+{0xE0,1,{0x01}},
+
+//Set VCOM
+{0x00,1,{0x00}},
+{0x01,1,{0xBA}},
+{0x03,1,{0x00}},
+{0x04,1,{0x75}},
+{0x17,1,{0x00}},
+{0x18,1,{0xA0}},
+{0x19,1,{0x05}},
+/*{0x0C,1,{0x74}},
+
+//Set Gamma Power,1,{ VGMP,1,{VGMN,1,{VGSP,1,{VGSN
+{0x17,1,{0x00}},
+{0x18,1,{0xB7}},
+{0x19,1,{0x00}},
+{0x1A,1,{0x00}},
+{0x1B,1,{0xB7}},
+{0x1C,1,{0x00}},
+
+//Set Gate Power
+{0x1F,1,{0x7E}},
+{0x20,1,{0x24}},
+{0x21,1,{0x24}},
+{0x22,1,{0x4E}},
+{0x24,1,{0xF8}},
+
+
+//SET RGBCYC
+{0x37,1,{0x09}},	//SS=1,1,{ BGR=1
+{0x38,1,{0x04}},	//JDT=100 column inversion
+{0x3D,1,{0xFF}},
+{0x3E,1,{0xFF}},
+{0x3F,1,{0x7F}},
+
+//Set TCON
+{0x40,1,{0x04}},	//RSO 04h=720,1,{ 05h=768,1,{ 06h=800
+{0x41,1,{0xA0}},	//LN=640->1280 line
+
+//--- power voltage  ----//
+{0x55,1,{0x01}},
+{0x56,1,{0x01}},
+{0x57,1,{0x69}},
+{0x58,1,{0x0A}},
+{0x59,1,{0x2A}},
+{0x5A,1,{0x1B}},
+{0x5B,1,{0x18}},
+
+//--- Gamma  ----//
+{0x5D,1,{0x68}},
+{0x5E,1,{0x44}},
+{0x5F,1,{0x35}},
+{0x60,1,{0x2A}},
+{0x61,1,{0x27}},
+{0x62,1,{0x19}},
+{0x63,1,{0x20}},
+{0x64,1,{0x0D}},
+{0x65,1,{0x27}},
+{0x66,1,{0x27}},
+{0x67,1,{0x28}},
+{0x68,1,{0x48}},
+{0x69,1,{0x37}},
+{0x6A,1,{0x45}},
+{0x6B,1,{0x3B}},
+{0x6C,1,{0x3C}},
+{0x6D,1,{0x2A}},
+{0x6E,1,{0x25}},
+{0x6F,1,{0x0F}},
+
+{0x70,1,{0x78}},
+{0x71,1,{0x44}},
+{0x72,1,{0x35}},
+{0x73,1,{0x2A}},
+{0x74,1,{0x27}},
+{0x75,1,{0x19}},
+{0x76,1,{0x20}},
+{0x77,1,{0x0D}},
+{0x78,1,{0x27}},
+{0x79,1,{0x27}},
+{0x7A,1,{0x28}},
+{0x7B,1,{0x48}},
+{0x7C,1,{0x37}},
+{0x7D,1,{0x45}},
+{0x7E,1,{0x3B}},
+{0x7F,1,{0x3C}},
+{0x80,1,{0x2A}},
+{0x81,1,{0x25}},
+{0x82,1,{0x0F}},
+
+
+//Page2,1,{ for GIP
+{0xE0,1,{0x02}},
+
+//GIP_L Pin mapping
+{0x00,1,{0x45}},
+{0x01,1,{0x47}},
+{0x02,1,{0x49}},
+{0x03,1,{0x4B}},
+{0x04,1,{0x41}},
+{0x05,1,{0x43}},
+{0x06,1,{0x1F}},
+{0x07,1,{0x1F}},
+{0x08,1,{0x1F}},
+{0x09,1,{0x1F}},
+{0x0A,1,{0x1F}},
+{0x0B,1,{0x1F}},
+{0x0C,1,{0x1F}},
+{0x0D,1,{0x1F}},
+{0x0E,1,{0x1F}},
+{0x0F,1,{0x1E}},
+{0x10,1,{0x1E}},
+{0x11,1,{0x1E}},
+{0x12,1,{0x1F}},
+{0x13,1,{0x1F}},
+{0x14,1,{0x1E}},
+{0x15,1,{0x1F}},
+
+//GIP_R Pin mapping
+{0x16,1,{0x44}},
+{0x17,1,{0x46}},
+{0x18,1,{0x48}},
+{0x19,1,{0x4A}},*/
+{0x1A,1,{0x00}},
+{0x1B,1,{0xA0}},
+{0x1C,1,{0x05}},
+{0x1F,1,{0x2F}},
+/*{0x1E,1,{0x1F}},
+{0x1F,1,{0x1F}},*/
+{0x20,1,{0x23}},
+{0x21,1,{0x23}},
+{0x22,1,{0x4F}},
+//{0x23,1,{0x1F}},
+//{0x24,1,{0x1F}},
+//{0x25,1,{0x1E}},
+{0x26,1,{0xF1}},
+/*{0x27,1,{0x1E}},
+{0x28,1,{0x1F}},
+{0x29,1,{0x1F}},
+{0x2A,1,{0x1E}},
+{0x2B,1,{0x1F}},
+                      
+//GIP_L_GS Pin mapping
+{0x2C,1,{0x0A}},
+{0x2D,1,{0x08}},   
+{0x2E,1,{0x06}}, 
+{0x2F,1,{0x04}}, 
+{0x30,1,{0x02}}, 
+{0x31,1,{0x00}}, 
+{0x32,1,{0x1F}}, 
+{0x33,1,{0x1F}}, 
+{0x34,1,{0x1F}}, 
+{0x35,1,{0x1F}}, 
+{0x36,1,{0x1F}}, */
+{0x37,1,{0x09}}, 
+{0x38,1,{0x04}}, 
+{0x39,1,{0x0C}}, 
+{0x3A,1,{0x18}}, 
+//{0x3B,1,{0x1E}}, 
+{0x3C,1,{0x78}}, 
+/*{0x3D,1,{0x1E}}, 
+{0x3E,1,{0x1F}}, 
+{0x3F,1,{0x1F}}, */
+{0x40,1,{0x04}}, 
+{0x41,1,{0xA0}},
+ 
+//GIP_R_GS Pin mapping
+/*{0x42,1,{0x0B}},
+{0x43,1,{0x09}},   
+{0x44,1,{0x07}}, 
+{0x45,1,{0x05}}, 
+{0x46,1,{0x03}}, 
+{0x47,1,{0x01}}, 
+{0x48,1,{0x1F}}, 
+{0x49,1,{0x1F}}, 
+{0x4A,1,{0x1F}}, 
+{0x4B,1,{0x1F}}, 
+{0x4C,1,{0x1F}}, 
+{0x4D,1,{0x1F}}, 
+{0x4E,1,{0x1F}}, 
+{0x4F,1,{0x1F}}, 
+{0x50,1,{0x1F}}, 
+{0x51,1,{0x1E}}, 
+{0x52,1,{0x1E}}, 
+{0x53,1,{0x1E}}, 
+{0x54,1,{0x1F}}, */
+{0x55,1,{0x01}}, 
+{0x56,1,{0x01}}, 
+{0x57,1,{0x69}}, 
+
+//GIP Timing  
+{0x58,1,{0x0A}}, 
+{0x59,1,{0x2A}}, 
+{0x5A,1,{0x29}}, 
+{0x5B,1,{0x10}}, 
+{0x5C,1,{0x16}}, 
+{0x5D,1,{0x70}}, 
+{0x5E,1,{0x54}}, 
+{0x5F,1,{0x43}}, 
+{0x60,1,{0x34}}, 
+{0x61,1,{0x2F}}, 
+{0x62,1,{0x1F}}, 
+{0x63,1,{0x23}}, 
+{0x64,1,{0x0C}},
+{0x65,1,{0x23}},
+{0x66,1,{0x1F}},
+{0x67,1,{0x1E}},
+{0x68,1,{0x3A}},
+{0x69,1,{0x28}},
+{0x6A,1,{0x34}},
+{0x6B,1,{0x27}}, 
+{0x6C,1,{0x26}}, 
+{0x6D,1,{0x1C}}, 
+{0x6E,1,{0x0F}}, 
+{0x6F,1,{0x02}}, 
+{0x70,1,{0x70}}, 
+{0x71,1,{0x54}}, 
+{0x72,1,{0x43}}, 
+{0x73,1,{0x34}}, 
+{0x74,1,{0x2F}}, 
+{0x75,1,{0x1F}}, 
+{0x76,1,{0x23}}, 
+{0x77,1,{0x0C}}, 
+{0x78,1,{0x23}}, 
+{0x79,1,{0x1F}}, 
+{0x7A,1,{0x1E}}, 
+{0x7B,1,{0x3A}}, 
+{0x7C,1,{0x28}}, 
+{0x7D,1,{0x34}}, 
+{0x7E,1,{0x27}}, 
+{0x7F,1,{0x26}}, 
+{0x80,1,{0x1C}}, 
+{0x81,1,{0x0F}}, 
+{0x82,1,{0x02}}, 
+
+
+{0xE0,1,{0x02}}, //ESD
+{0x01,1,{0x04}}, 
+{0x02,1,{0x0A}}, 
+{0x01,1,{0x08}}, 
+{0x04,1,{0x00}}, 
+{0x05,1,{0x02}}, 
+{0x06,1,{0x1F}}, 
+{0x07,1,{0x1F}}, 
+{0x08,1,{0x1F}}, 
+{0x09,1,{0x1F}}, 
+{0x0A,1,{0x1F}}, 
+{0x0B,1,{0x1F}}, 
+{0x0C,1,{0x1F}}, 
+{0x0D,1,{0x1F}}, 
+{0x0E,1,{0x1F}}, 
+{0x0F,1,{0x04}}, 
+{0x10,1,{0x1F}}, 
+{0x11,1,{0x1F}}, 
+{0x12,1,{0x1F}}, 
+{0x13,1,{0x1F}}, 
+{0x14,1,{0x1F}}, 
+{0x15,1,{0x1E}}, 
+{0x16,1,{0x07}}, 
+{0x17,1,{0x05}}, 
+{0x18,1,{0x0B}}, 
+{0x19,1,{0x09}}, 
+{0x1A,1,{0x01}}, 
+{0x1B,1,{0x03}}, 
+{0x1C,1,{0x1F}}, 
+{0x1D,1,{0x1F}}, 
+{0x1E,1,{0x1F}}, 
+{0x1F,1,{0x1F}}, 
+{0x20,1,{0x1F}}, 
+{0x21,1,{0x1F}}, 
+{0x22,1,{0x1F}}, 
+{0x23,1,{0x1F}}, 
+{0x24,1,{0x1F}}, 
+{0x25,1,{0x1F}}, 
+{0x26,1,{0x1F}}, 
+{0x27,1,{0x1F}}, 
+{0x28,1,{0x1F}}, 
+{0x29,1,{0x11}}, 
+{0x2A,1,{0x1F}}, 
+{0x2B,1,{0x1E}}, 
+{0x2C,1,{0x09}}, 
+{0x2D,1,{0x0B}}, 
+{0x2E,1,{0x05}}, 
+{0x2F,1,{0x07}}, 
+{0x30,1,{0x03}}, 
+{0x31,1,{0x01}}, 
+{0x32,1,{0x1F}}, 
+{0x33,1,{0x1F}}, 
+{0x34,1,{0x1F}}, 
+{0x35,1,{0x1F}}, 
+{0x36,1,{0x1F}}, 
+{0x37,1,{0x1F}}, 
+{0x38,1,{0x1F}}, 
+{0x39,1,{0x1F}}, 
+{0x3A,1,{0x1F}}, 
+{0x3B,1,{0x1F}}, 
+{0x3C,1,{0x1F}}, 
+{0x3D,1,{0x1F}}, 
+{0x3E,1,{0x1F}}, 
+{0x3F,1,{0x11}}, 
+{0x40,1,{0x1E}},
+{0x41,1,{0x1F}},
+{0x42,1,{0x08}},
+{0x43,1,{0x0A}}, 
+{0x44,1,{0x04}}, 
+{0x45,1,{0x06}}, 
+{0x46,1,{0x02}}, 
+{0x47,1,{0x00}}, 
+{0x48,1,{0x1F}}, 
+{0x49,1,{0x1F}}, 
+{0x4A,1,{0x1F}},
+{0x4B,1,{0x1F}},
+{0x4C,1,{0x1F}},
+{0x4D,1,{0x1F}},
+{0x4E,1,{0x1F}},
+{0x4F,1,{0x1F}},
+{0x50,1,{0x1F}},
+{0x51,1,{0x1F}},
+{0x52,1,{0x1F}},
+{0x53,1,{0x1F}}, 
+{0x54,1,{0x1F}}, 
+{0x55,1,{0x10}}, 
+{0x56,1,{0x1E}}, 
+{0x57,1,{0x1F}}, 
+{0x58,1,{0x40}}, 
+{0x59,1,{0x00}}, 
+{0x5A,1,{0x00}},
+{0x5B,1,{0x30}},
+{0x5C,1,{0x07}},
+{0x5D,1,{0x30}},
+{0x5E,1,{0x00}},
+{0x5F,1,{0x00}},
+{0x60,1,{0x30}},
+{0x61,1,{0x00}},
+{0x62,1,{0x00}},
+{0x63,1,{0x03}}, 
+{0x64,1,{0x6B}}, 
+{0x65,1,{0x60}}, 
+{0x66,1,{0x02}}, 
+{0x67,1,{0x73}}, 
+{0x68,1,{0x0C}}, 
+{0x69,1,{0x06}}, 
+{0x6A,1,{0x6B}},
+{0x6B,1,{0x07}},
+{0x6C,1,{0x00}},
+{0x6D,1,{0x00}},
+{0x6E,1,{0x00}},
+{0x6F,1,{0x00}},
+{0x70,1,{0x00}},
+{0x71,1,{0x00}},
+{0x72,1,{0x06}},
+{0x73,1,{0x86}}, 
+{0x74,1,{0x00}}, 
+{0x75,1,{0x07}}, 
+{0x76,1,{0x00}}, 
+{0x77,1,{0x5D}}, 
+{0x78,1,{0x14}}, 
+{0x79,1,{0x00}}, 
+{0x7A,1,{0x05}},
+{0x7B,1,{0x05}},
+{0x7C,1,{0x00}},
+{0x7D,1,{0x03}},
+{0x7E,1,{0x86}},
+{0x7F,1,{0x00}},
+//Page0
+{0xE0,1,{0x04}},
+{0x0E,1,{0x48}},
+{0x2B,1,{0x2B}},
+{0x2E,1,{0x44}},
+{0xE0,1,{0x00}},
+{0xE6,1,{0x02}},
+{0xE7,1,{0x02}},
+{0x11,1,{0x00}},
+
+//open watch dog
+{REGFLAG_DELAY,120,{}},
+
+{0x35,1,{0x00}},
+
+{0x11,1,{0x00}},                 // Sleep-Out
+
+{REGFLAG_DELAY,120,{}},
+
+{0x29,1,{0x00}},                 // Display On
+
+{REGFLAG_DELAY,20,{}},
+
+{REGFLAG_END_OF_TABLE,0x00,{}}
+};
+/*
+    // Sleep Out
+    {0x11, 0, {0x00}},
+    {REGFLAG_DELAY, 120, {}},
+
+    // Display ON
+    {0x29, 0, {0x00}},
+    {REGFLAG_DELAY, 10, {}},
+    
+    //{REGFLAG_END_OF_TABLE, 0x00, {}}
+};
+
+static struct LCM_setting_table lcm_sleep_mode_in_setting[] = {
+    // Display off sequence
+    {0x28, 0, {0x00}},
+    {REGFLAG_DELAY, 10, {}},
+
+    // Sleep Mode On
+	{0x10, 0, {0x00}},
+	{REGFLAG_DELAY, 120, {}},
+	//{REGFLAG_END_OF_TABLE, 0x00, {}}
+};*/
+static struct LCM_setting_table lcm_sleep_out_setting[] = {
+	// Sleep Out
+	{0x11, 1, {0x00}},
+	{REGFLAG_DELAY, 120, {}},
+
+	// Display ON
+	{0x29, 1, {0x00}},
+	{REGFLAG_DELAY, 10, {}},
+
+	{REGFLAG_END_OF_TABLE, 0x00, {}}
+};
+
+
+static struct LCM_setting_table lcm_sleep_in_setting[] = {
+	// Display off sequence
+	{0x01, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+	
+	{0x28, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
+	// Sleep Mode On
+	{0x10, 1, {0x00}},
+	{REGFLAG_DELAY, 50, {}},
+
+	{REGFLAG_END_OF_TABLE, 0x00, {}}
+};
+
+
+
+
+static void push_table(struct LCM_setting_table *table, unsigned int count,
+		unsigned char force_update)
+{
+	unsigned int i;
+
+	for (i = 0; i < count; i++) {
+
+		unsigned cmd;
+		cmd = table[i].cmd;
+
+		switch (cmd) {
+
+		case REGFLAG_DELAY:
+			MDELAY(table[i].count);
+			break;
+
+		case REGFLAG_END_OF_TABLE:
+			break;
+
+		default:
+			dsi_set_cmdq_V2(cmd, table[i].count,
+					table[i].para_list, force_update);
+		}
+	}
+
+}
+
+
+// ---------------------------------------------------------------------------
+//  LCM Driver Implementations
+// ---------------------------------------------------------------------------
+
+static void lcm_set_util_funcs(const LCM_UTIL_FUNCS * util)
+{
+	memcpy(&lcm_util, util, sizeof(LCM_UTIL_FUNCS));
+}
+
+
+static void lcm_get_params(LCM_PARAMS * params)
+{
+//	memset(params, 0, sizeof(LCM_PARAMS));
+
+	/*params->type = LCM_TYPE_DSI;
+
+	params->width = FRAME_WIDTH;
+	params->height = FRAME_HEIGHT;
+
+	// enable tearing-free
+	params->dbi.te_mode = LCM_DBI_TE_MODE_DISABLED;
+	params->dbi.te_edge_polarity = LCM_POLARITY_RISING;
+
+#if (LCM_DSI_CMD_MODE)
+	params->dsi.mode = CMD_MODE;
+#else
+	params->dsi.mode   = SYNC_PULSE_VDO_MODE;//SYNC_EVENT_VDO_MODE;//BURST_VDO_MODE;////
+#endif
+
+	// DSI
+	/* Command mode setting */
+	/*	params->dsi.LANE_NUM				= LCM_FOUR_LANE;
+	
+	//The following defined the fomat for data coming from LCD engine.
+	params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
+	params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
+	params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
+	params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;
+	
+	
+	params->dsi.PS=LCM_PACKED_PS_24BIT_RGB888;
+	
+#if (LCM_DSI_CMD_MODE)
+	params->dsi.intermediat_buffer_num = 0;//because DSI/DPI HW design change, this parameters should be 0 when video mode in MT658X; or memory leakage
+	params->dsi.word_count=FRAME_WIDTH*3;	//DSI CMD mode need set these two bellow params, different to 6577
+#else
+	params->dsi.intermediat_buffer_num = 0;	//because DSI/DPI HW design change, this parameters should be 0 when video mode in MT658X; or memory leakage
+#endif
+
+	// Video mode setting
+	params->dsi.packet_size=256;
+
+	params->dsi.vertical_sync_active				=  2;//4
+	params->dsi.vertical_backporch					= 16;//50;
+	params->dsi.vertical_frontporch					= 8;//50;
+	params->dsi.vertical_active_line				= FRAME_HEIGHT; 
+
+		params->dsi.horizontal_sync_active				= 20;
+		params->dsi.horizontal_backporch				= 20;
+		params->dsi.horizontal_frontporch				= 20;
+		params->dsi.horizontal_active_pixel 			= FRAME_WIDTH;
+
+	// Bit rate calculation
+	//1 Every lane speed
+/*
+		params->dsi.esd_check_enable = 1;
+		params->dsi.customization_esd_check_enable = 1;
+
+        params->dsi.lcm_esd_check_table[0].cmd          = 0x0A;
+        params->dsi.lcm_esd_check_table[0].count        = 1;
+        params->dsi.lcm_esd_check_table[0].para_list[0] = 0x9C;
+		
+		params->dsi.cont_clock=1;
+*/
+		//params->dsi.PLL_CLOCK=215;
+	memset(params, 0, sizeof(LCM_PARAMS));
+	
+		params->type   = LCM_TYPE_DSI;
+
+		params->width  = FRAME_WIDTH;
+		params->height = FRAME_HEIGHT;
+
+		// enable tearing-free
+		params->dbi.te_mode 				= LCM_DBI_TE_MODE_DISABLED;
+		params->dbi.te_edge_polarity		= LCM_POLARITY_RISING;
+
+#if (LCM_DSI_CMD_MODE)
+		params->dsi.mode   = CMD_MODE;
+#else
+		params->dsi.mode   = SYNC_PULSE_VDO_MODE;
+#endif
+	
+		// DSI
+		/* Command mode setting */
+		params->dsi.LANE_NUM				= LCM_FOUR_LANE;
+		//The following defined the fomat for data coming from LCD engine.
+		params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
+		params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
+		params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
+		params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;
+
+		// Highly depends on LCD driver capability.
+		// Not support in MT6573
+		params->dsi.packet_size=256;
+
+		// Video mode setting		
+		params->dsi.intermediat_buffer_num = 2;
+
+		params->dsi.PS=LCM_PACKED_PS_24BIT_RGB888;
+
+		params->dsi.vertical_sync_active				= 4;// 4;2
+		params->dsi.vertical_backporch					= 8;// 8;2
+		params->dsi.vertical_frontporch					= 12;// 8;2
+		params->dsi.vertical_active_line				= FRAME_HEIGHT; 
+
+		params->dsi.horizontal_sync_active				= 10;//6
+		params->dsi.horizontal_backporch				= 10;//37
+		params->dsi.horizontal_frontporch				= 20;//37
+		params->dsi.horizontal_active_pixel				= FRAME_WIDTH;
+
+		params->dsi.PLL_CLOCK=213;
+
+		/* ESD or noise interference recovery For video mode LCM only. */ // Send TE packet to LCM in a period of n frames and check the response. 
+		params->dsi.lcm_int_te_monitor = FALSE; 
+		params->dsi.lcm_int_te_period = 1; // Unit : frames 
+ 
+		// Need longer FP for more opportunity to do int. TE monitor applicably. 
+		if(params->dsi.lcm_int_te_monitor) 
+			params->dsi.vertical_frontporch *= 2; 
+ 
+		// Monitor external TE (or named VSYNC) from LCM once per 2 sec. (LCM VSYNC must be wired to baseband TE pin.) 
+		//params->dsi.lcm_ext_te_monitor = FALSE; 
+		// Non-continuous clock 
+	//	params->dsi.noncont_clock = TRUE; 
+		//params->dsi.noncont_clock_period = 2; // Unit : frames
+}
+/* 
+  params->physical_width = 720;
+  params->dsi.packet_size = 256;
+  params->type = 2;
+  params->dsi.data_format.format = 2;
+  params->dsi.PS = 2;
+  params->dsi.word_count = 2160;
+  params->dsi.vertical_backporch = 15;
+  params->dsi.horizontal_frontporch = 30;
+  params->dsi.PLL_CLOCK = 195;
+  params->dsi.lcm_esd_check_table[0].cmd = 10;
+  params->dsi.lcm_esd_check_table[0].para_list[0] = -100;
+  params->width = 720;
+  params->dsi.horizontal_active_pixel = 720;
+  params->height = 1280;
+  params->dsi.vertical_active_line = 1280;
+  params->dsi.mode = 1;
+  params->dsi.esd_check_enable = 1;
+  params->dsi.customization_esd_check_enable = 1;
+  params->dsi.lcm_esd_check_table[0].count = 1;
+  params->dsi.LANE_NUM = 4;
+  params->dsi.vertical_sync_active = 4;
+  params->dsi.vertical_frontporch = 4;
+  params->dsi.data_format.color_order = 0;
+  params->dsi.data_format.trans_seq = 0;
+  params->dsi.data_format.padding = 0;
+  params->dsi.intermediat_buffer_num = 0;
+  params->dsi.horizontal_sync_active = 20;
+  params->dsi.horizontal_backporch = 20;*/
+
+
+
+static void lcm_init(void)
+{
+	SET_RESET_PIN(1);
+	MDELAY(10);
+	SET_RESET_PIN(0);
+	MDELAY(50);
+	SET_RESET_PIN(1);
+	MDELAY(120);
+
+	push_table(lcm_initialization_setting,sizeof(lcm_initialization_setting) /sizeof(struct LCM_setting_table), 1);
+}
+
+static void lcm_suspend(void)
+{
+	unsigned int array[5];
+ 	array[0] = 0x00011500;// read id return two byte,version and id
+	dsi_set_cmdq(&array, 1, 1);
+	MDELAY(100);
+	array[0] = 0x00280500;
+	dsi_set_cmdq(&array, 1, 1);
+	MDELAY(50);
+ 	array[0] = 0x00100500;// read id return two byte,version and id
+	dsi_set_cmdq(&array, 1, 1);
+	MDELAY(120);
+ 	array[0] = 0x014f1500;// read id return two byte,version and id
+	dsi_set_cmdq(&array, 1, 1);
+	MDELAY(50);
+
+}
+
+
+static void lcm_resume(void)
+{
+    //unsigned int id;
+	//unsigned char buffer[5];
+	//unsigned int array[5];
+	//lcm_compare_id();
+//	push_table(lcm_sleep_out_setting,sizeof(lcm_sleep_out_setting) /sizeof(struct LCM_setting_table), 1);
+	lcm_init();
+
+/*array[0] = 0x00063902;// read id return two byte,version and id
+	array[1] = 0x52AA55F0;
+	array[2] = 0x00000108;
+	dsi_set_cmdq(array, 3, 1);
+	MDELAY(10);
+	
+	array[0] = 0x00023700;// read id return two byte,version and id
+	dsi_set_cmdq(array, 1, 1);
+
+	read_reg_v2(0xc5, buffer, 2);
+	id = ((buffer[0] << 8) | buffer[1]);
+#if defined(BUILD_LK)
+printf("%s, [rm68191_ctc50_jhzt]  buffer[0] = [0x%d] buffer[2] = [0x%d] ID = [0x%d]\n",__func__, buffer[0], buffer[1], id);
+#else
+printk("%s, [rm68191_ctc50_jhzt]  buffer[0] = [0x%d] buffer[2] = [0x%d] ID = [0x%d]\n",__func__, buffer[0], buffer[1], id);
+#endif*/
+}
+
+
+static void lcm_update(unsigned int x, unsigned int y,
+		unsigned int width, unsigned int height)
+{
+	unsigned int x0 = x;
+	unsigned int y0 = y;
+	unsigned int x1 = x0 + width - 1;
+	unsigned int y1 = y0 + height - 1;
+
+	unsigned char x0_MSB = ((x0 >> 8) & 0xFF);
+	unsigned char x0_LSB = (x0 & 0xFF);
+	unsigned char x1_MSB = ((x1 >> 8) & 0xFF);
+	unsigned char x1_LSB = (x1 & 0xFF);
+	unsigned char y0_MSB = ((y0 >> 8) & 0xFF);
+	unsigned char y0_LSB = (y0 & 0xFF);
+	unsigned char y1_MSB = ((y1 >> 8) & 0xFF);
+	unsigned char y1_LSB = (y1 & 0xFF);
+
+	unsigned int data_array[16];
+
+	data_array[0] = 0x00053902;
+	data_array[1] =
+		(x1_MSB << 24) | (x0_LSB << 16) | (x0_MSB << 8) | 0x2a;
+	data_array[2] = (x1_LSB);
+	data_array[3] = 0x00053902;
+	data_array[4] =
+		(y1_MSB << 24) | (y0_LSB << 16) | (y0_MSB << 8) | 0x2b;
+	data_array[5] = (y1_LSB);
+	data_array[6] = 0x002c3909;
+
+	dsi_set_cmdq(&data_array, 7, 0);
+
+}
+
+
+static unsigned int lcm_compare_id(void)
+{
+    int array[4];
+    char buffer[5];
+    char id_high=0;
+    char id_low=0;
+    int id=0;
+    
+    SET_RESET_PIN(1);
+    MDELAY(10);
+	  SET_RESET_PIN(0);
+    MDELAY(20);
+	  SET_RESET_PIN(1);
+    MDELAY(50);
+
+    array[0] = 0x00023700;// read id return two byte,version and id
+    dsi_set_cmdq(array, 1, 1);
+    read_reg_v2(0x04,buffer, 2);
+
+    id_high = buffer[0]; 
+    id_low = buffer[1];
+    id = (id_high<<8)|id_low; 
+
+    #ifdef BUILD_LK
+    printf("luke: JD9365 %s %d, id = 0x%08x\n", __func__,__LINE__, id);
+    #else
+
+    printk("luke: JD9365 %s %d, id = 0x%08x\n", __func__,__LINE__, id);
+    #endif
+ return (LCM_ID_JD9365 == id)?1:0;
+
+}
+//no use
+static unsigned int lcm_esd_recover(void)
+{
+    unsigned char para = 0;
+	unsigned int data_array1[16];
+
+#ifndef BUILD_LK
+    printk("JD9365 lcm_esd_recover enter\n");
+#endif
+    
+
+    SET_RESET_PIN(1);
+    MDELAY(10);
+    SET_RESET_PIN(0);
+    MDELAY(30);
+    SET_RESET_PIN(1);
+    MDELAY(130);
+    #if 0
+	push_table(lcm_initialization_setting, sizeof(lcm_initialization_setting) / sizeof(struct LCM_setting_table), 1);
+	MDELAY(10);
+	push_table(lcm_sleep_out_setting, sizeof(lcm_sleep_out_setting) / sizeof(struct LCM_setting_table), 1);
+    	MDELAY(10);
+    #else
+        lcm_init();
+    #endif
+   
+   data_array1[0]= 0x00320500;
+   dsi_set_cmdq(&data_array1, 1, 1);
+   MDELAY(50);
+
+    return 1;
+}
+static unsigned int lcm_esd_check(void)
+{
+    unsigned char buffer[1] ={0};
+    //unsigned int data_array[1];
+   // data_array[0] = 0x00013700;// read id return two byte,version and id 3 byte 
+  // dsi_set_cmdq(&data_array, 1, 1);
+   read_reg_v2(0x0a, buffer, 1);
+   
+#ifndef BUILD_LK
+    printk("JD9365 lcm_esd_check enter %x\n",buffer[0]);
+#endif
+#ifndef BUILD_LK
+        if(buffer[0] == 0x9C)
+        {
+          #ifndef BUILD_LK
+          printk("JD9365 lcm_esd_check false \n");
+          #endif
+
+            return false;
+        }
+        else
+        {      
+           #ifndef BUILD_LK
+          printk("JD9365 lcm_esd_check true \n");
+          #endif
+           //lcm_esd_recover();
+            return true;
+        }
+#endif
+}
+
+// ---------------------------------------------------------------------------
+//  Get LCM Driver Hooks
+// ---------------------------------------------------------------------------
+LCM_DRIVER jd9365_6735_dsi_video_lcm_drv = 
+{
+	.name			= "jd9365_6735_dsi_video",
+	.set_util_funcs = lcm_set_util_funcs,
+	.get_params     = lcm_get_params,
+	.init           = lcm_init,
+	.suspend        = lcm_suspend,
+	.resume         = lcm_resume,	
+	.compare_id     = lcm_compare_id,	
+    //.esd_check   	= lcm_esd_check,	
+    .esd_recover   	= lcm_esd_recover,	
+#if (LCM_DSI_CMD_MODE)
+    .update         = lcm_update,
+#endif	//wqtao
+};
+
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter.h
index 07e4d8e..580ee9d 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter.h
@@ -6,9 +6,9 @@
 // ============================================================
 // define
 // ============================================================
-#define SOC_BY_AUXADC
-#define SOC_BY_HW_FG //100%
-//#define SOC_BY_SW_FG
+//#define SOC_BY_AUXADC
+//#define SOC_BY_HW_FG //100%
+#define SOC_BY_SW_FG
 
 //#define CONFIG_DIS_CHECK_BATTERY
 //#define FIXED_TBAT_25
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter_table.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter_table.h
index dc8b42f..b54d7db 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter_table.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_battery_meter_table.h
@@ -105,493 +105,847 @@ typedef enum
         { 60,11210}        
     };
 #endif
-
 // T0 -10C
 BATTERY_PROFILE_STRUC battery_profile_t0[] =
 {
-	/*{0   , 4175},
-	{2   , 4157},
-	{3   , 4141},
-	{5   , 4126},
-	{6   , 4112},
-	{8   , 4100},
-	{9   , 4090},
-	{11  , 4081},
-	{12  , 4068},
-	{14  , 4045},
-	{15  , 4021},
-	{17  , 4000},
-	{18  , 3984},
-	{20  , 3971},
-	{21  , 3961},
-	{23  , 3951},
-	{24  , 3941},
-	{26  , 3932},
-	{27  , 3923},
-	{29  , 3913},
-	{30  , 3903},
-	{32  , 3893},
-	{33  , 3884},
-	{35  , 3875},
-	{37  , 3867},
-	{38  , 3859},
-	{40  , 3852},
-	{41  , 3845},
-	{43  , 3839},
-	{44  , 3833},
-	{46  , 3827},
-	{47  , 3822},
-	{49  , 3817},
-	{50  , 3811},
-	{52  , 3807},
-	{53  , 3802},
-	{55  , 3798},
-	{56  , 3794},
-	{58  , 3790},
-	{59  , 3786},
-	{61  , 3783},
-	{62  , 3779},
-	{64  , 3776},
-	{65  , 3772},
-	{67  , 3768},
-	{68  , 3763},
-	{70  , 3759},
-	{71  , 3754},
-	{73  , 3749},
-	{75  , 3744},
-	{76  , 3739},
-	{78  , 3734},
-	{79  , 3730},
-	{81  , 3725},
-	{82  , 3721},
-	{84  , 3718},
-	{85  , 3715},
-	{87  , 3712},
-	{88  , 3708},
-	{90  , 3702},
-	{91  , 3691},
-	{93  , 3673},
-	{94  , 3647},
-	{96  , 3612},
-	{97  , 3563},
-	{99  , 3516},
-	{100 , 3400}  */
-{0 , 4200},
-{1 , 4192},
-{2 , 4184},
-{3 , 4176},
-{4 , 4168},
-{5 , 4160},
-{6 , 4152},
-{7 , 4144},
-{8 , 4136},
-{9 , 4128},
-{10 , 4120},
-{11 , 4112},
-{12 , 4104},
-{13 , 4096},
-{14 , 4088},
-{15 , 4080},
-{16 , 4072},
-{17 , 4064},
-{18 , 4056},
-{19 , 4048},
-{20 , 4040},
-{21 , 4032},
-{22 , 4024},
-{23 , 4016},
-{24 , 4008},
-{25 , 4000},
-{26 , 3992},
-{27 , 3984},
-{28 , 3976},
-{29 , 3968},
-{30 , 3960},
-{31 , 3952},
-{32 , 3944},
-{33 , 3936},
-{34 , 3928},
-{35 , 3920},
-{36 , 3912},
-{37 , 3904},
-{38 , 3896},
-{39 , 3888},
-{40 , 3880},
-{41 , 3872},
-{42 , 3864},
-{43 , 3856},
-{44 , 3848},
-{45 , 3840},
-{46 , 3832},
-{47 , 3824},
-{48 , 3816},
-{49 , 3808},
-{50 , 3800},
-{51 , 3792},
-{52 , 3784},
-{53 , 3776},
-{54 , 3768},
-{55 , 3760},
-{56 , 3752},
-{57 , 3744},
-{58 , 3736},
-{59 , 3728},
-{60 , 3720},
-{61 , 3712},
-{62 , 3704},
-{63 , 3696},
-{64 , 3688},
-{65 , 3680},
-{66 , 3672},
-{67 , 3664},
-{68 , 3656},
-{69 , 3648},
-{70 , 3640},
-{71 , 3632},
-{72 , 3624},
-{73 , 3616},
-{74 , 3608},
-{75 , 3600},
-{76 , 3592},
-{77 , 3584},
-{78 , 3576},
-{79 , 3568},
-{80 , 3560},
-{81 , 3552},
-{82 , 3544},
-{83 , 3536},
-{84 , 3528},
-{85 , 3520},
-{86 , 3512},
-{87 , 3504},
-{88 , 3496},
-{89 , 3488},
-{90 , 3480},
-{91 , 3472},
-{92 , 3464},
-{93 , 3456},
-{94 , 3448},
-{95 , 3440},
-{96 , 3432},
-{97 , 3424},
-{98 , 3416},
-{100 , 3408}   
-};      
-        
-// T1 0C 
+	{0 , 4098},
+	{2 , 4069},
+	{3 , 4053},
+	{5 , 4040},
+	{7 , 4023},
+	{8 , 3997},
+	{10 , 3961},
+	{12 , 3946},
+	{13 , 3938},
+	{15 , 3932},
+	{17 , 3926},
+	{19 , 3918},
+	{20 , 3910},
+	{22 , 3901},
+	{23 , 3894},
+	{25 , 3885},
+	{27 , 3874},
+	{29 , 3866},
+	{30 , 3856},
+	{32 , 3846},
+	{34 , 3838},
+	{35 , 3830},
+	{37 , 3823},
+	{39 , 3817},
+	{40 , 3814},
+	{42 , 3808},
+	{44 , 3806},
+	{45 , 3803},
+	{47 , 3801},
+	{49 , 3798},
+	{50 , 3795},
+	{52 , 3796},
+	{54 , 3795},
+	{55 , 3792},
+	{57 , 3792},
+	{59 , 3790},
+	{60 , 3789},
+	{62 , 3787},
+	{64 , 3785},
+	{65 , 3783},
+	{67 , 3781},
+	{69 , 3776},
+	{70 , 3772},
+	{72 , 3767},
+	{74 , 3763},
+	{76 , 3758},
+	{77 , 3751},
+	{79 , 3742},
+	{81 , 3734},
+	{82 , 3725},
+	{84 , 3719},
+	{86 , 3715},
+	{87 , 3712},
+	{89 , 3707},
+	{91 , 3702},
+	{92 , 3696},
+	{94 , 3678},
+	{96 , 3647},
+	{97 , 3612},
+	{98 , 3575},
+	{98 , 3537},
+	{99 , 3502},
+	{99 , 3472},
+	{100 , 3443},
+	{100 , 3419},
+	{100 , 3395},
+	{100 , 3373},
+	{100 , 3357},
+	{100 , 3341},
+	{100 , 3328},
+	{100 , 3317},
+	{100 , 3307},
+	{100 , 3300},
+	{100 , 3293},
+	{100 , 3288},
+	{100 , 3283},
+	{100 , 3275},
+	{100 , 3271},
+	{100 , 3267},
+	{100 , 3260},
+	{100 , 3256},
+	{100 , 3251},
+	{100 , 3243},
+	{100 , 3239},
+	{100 , 3233},
+	{100 , 3225},
+	{100 , 3218},
+	{100 , 3214},
+	{100 , 3209},
+	{100 , 3202},
+	{100 , 3196},
+	{100 , 3185},
+	{100 , 3171},
+	{100 , 3157},
+	{100 , 3142},
+	{100 , 3125},
+	{100 , 3114},
+	{100 , 3095},
+	{100 , 3095},
+	{100 , 3270}
+};
+
+
+// T1 0C
 BATTERY_PROFILE_STRUC battery_profile_t1[] =
 {
-	{0 , 4200},
-{1 , 4192},
-{2 , 4184},
-{3 , 4176},
-{4 , 4168},
-{5 , 4160},
-{6 , 4152},
-{7 , 4144},
-{8 , 4136},
-{9 , 4128},
-{10 , 4120},
-{11 , 4112},
-{12 , 4104},
-{13 , 4096},
-{14 , 4088},
-{15 , 4080},
-{16 , 4072},
-{17 , 4064},
-{18 , 4056},
-{19 , 4048},
-{20 , 4040},
-{21 , 4032},
-{22 , 4024},
-{23 , 4016},
-{24 , 4008},
-{25 , 4000},
-{26 , 3992},
-{27 , 3984},
-{28 , 3976},
-{29 , 3968},
-{30 , 3960},
-{31 , 3952},
-{32 , 3944},
-{33 , 3936},
-{34 , 3928},
-{35 , 3920},
-{36 , 3912},
-{37 , 3904},
-{38 , 3896},
-{39 , 3888},
-{40 , 3880},
-{41 , 3872},
-{42 , 3864},
-{43 , 3856},
-{44 , 3848},
-{45 , 3840},
-{46 , 3832},
-{47 , 3824},
-{48 , 3816},
-{49 , 3808},
-{50 , 3800},
-{51 , 3792},
-{52 , 3784},
-{53 , 3776},
-{54 , 3768},
-{55 , 3760},
-{56 , 3752},
-{57 , 3744},
-{58 , 3736},
-{59 , 3728},
-{60 , 3720},
-{61 , 3712},
-{62 , 3704},
-{63 , 3696},
-{64 , 3688},
-{65 , 3680},
-{66 , 3672},
-{67 , 3664},
-{68 , 3656},
-{69 , 3648},
-{70 , 3640},
-{71 , 3632},
-{72 , 3624},
-{73 , 3616},
-{74 , 3608},
-{75 , 3600},
-{76 , 3592},
-{77 , 3584},
-{78 , 3576},
-{79 , 3568},
-{80 , 3560},
-{81 , 3552},
-{82 , 3544},
-{83 , 3536},
-{84 , 3528},
-{85 , 3520},
-{86 , 3512},
-{87 , 3504},
-{88 , 3496},
-{89 , 3488},
-{90 , 3480},
-{91 , 3472},
-{92 , 3464},
-{93 , 3456},
-{94 , 3448},
-{95 , 3440},
-{96 , 3432},
-{97 , 3424},
-{98 , 3416},
-{100 , 3408}   
-};           
+	{0 , 4048},
+	{2 , 4008},
+	{3 , 3989},
+	{5 , 3977},
+	{6 , 3966},
+	{8 , 3960},
+	{9 , 3956},
+	{11 , 3951},
+	{13 , 3948},
+	{14 , 3941},
+	{16 , 3935},
+	{17 , 3928},
+	{19 , 3922},
+	{20 , 3914},
+	{22 , 3906},
+	{24 , 3898},
+	{25 , 3892},
+	{27 , 3882},
+	{28 , 3872},
+	{30 , 3860},
+	{31 , 3849},
+	{33 , 3839},
+	{35 , 3831},
+	{36 , 3824},
+	{38 , 3818},
+	{39 , 3815},
+	{41 , 3808},
+	{42 , 3805},
+	{44 , 3803},
+	{46 , 3798},
+	{47 , 3796},
+	{49 , 3793},
+	{50 , 3792},
+	{52 , 3790},
+	{53 , 3790},
+	{55 , 3788},
+	{57 , 3788},
+	{58 , 3787},
+	{60 , 3787},
+	{61 , 3785},
+	{63 , 3785},
+	{64 , 3784},
+	{66 , 3782},
+	{67 , 3779},
+	{69 , 3777},
+	{71 , 3774},
+	{72 , 3769},
+	{74 , 3766},
+	{75 , 3762},
+	{77 , 3756},
+	{78 , 3748},
+	{80 , 3742},
+	{82 , 3734},
+	{83 , 3724},
+	{85 , 3714},
+	{86 , 3708},
+	{88 , 3703},
+	{89 , 3701},
+	{91 , 3699},
+	{93 , 3696},
+	{94 , 3689},
+	{96 , 3662},
+	{97 , 3601},
+	{99 , 3533},
+	{99 , 3475},
+	{100 , 3418},
+	{100 , 3363},
+	{100 , 3315},
+	{100 , 3270},
+	{100 , 3238},
+	{100 , 3208},
+	{100 , 3191},
+	{100 , 3172},
+	{100 , 3159},
+	{100 , 3150},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137},
+	{100 , 3137}
+};
+
 
 // T2 25C
 BATTERY_PROFILE_STRUC battery_profile_t2[] =
 {
-	{0 , 4200},
-{1 , 4192},
-{2 , 4184},
-{3 , 4176},
-{4 , 4168},
-{5 , 4160},
-{6 , 4152},
-{7 , 4144},
-{8 , 4136},
-{9 , 4128},
-{10 , 4120},
-{11 , 4112},
-{12 , 4104},
-{13 , 4096},
-{14 , 4088},
-{15 , 4080},
-{16 , 4072},
-{17 , 4064},
-{18 , 4056},
-{19 , 4048},
-{20 , 4040},
-{21 , 4032},
-{22 , 4024},
-{23 , 4016},
-{24 , 4008},
-{25 , 4000},
-{26 , 3992},
-{27 , 3984},
-{28 , 3976},
-{29 , 3968},
-{30 , 3960},
-{31 , 3952},
-{32 , 3944},
-{33 , 3936},
-{34 , 3928},
-{35 , 3920},
-{36 , 3912},
-{37 , 3904},
-{38 , 3896},
-{39 , 3888},
-{40 , 3880},
-{41 , 3872},
-{42 , 3864},
-{43 , 3856},
-{44 , 3848},
-{45 , 3840},
-{46 , 3832},
-{47 , 3824},
-{48 , 3816},
-{49 , 3808},
-{50 , 3800},
-{51 , 3792},
-{52 , 3784},
-{53 , 3776},
-{54 , 3768},
-{55 , 3760},
-{56 , 3752},
-{57 , 3744},
-{58 , 3736},
-{59 , 3728},
-{60 , 3720},
-{61 , 3712},
-{62 , 3704},
-{63 , 3696},
-{64 , 3688},
-{65 , 3680},
-{66 , 3672},
-{67 , 3664},
-{68 , 3656},
-{69 , 3648},
-{70 , 3640},
-{71 , 3632},
-{72 , 3624},
-{73 , 3616},
-{74 , 3608},
-{75 , 3600},
-{76 , 3592},
-{77 , 3584},
-{78 , 3576},
-{79 , 3568},
-{80 , 3560},
-{81 , 3552},
-{82 , 3544},
-{83 , 3536},
-{84 , 3528},
-{85 , 3520},
-{86 , 3512},
-{87 , 3504},
-{88 , 3496},
-{89 , 3488},
-{90 , 3480},
-{91 , 3472},
-{92 , 3464},
-{93 , 3456},
-{94 , 3448},
-{95 , 3440},
-{96 , 3432},
-{97 , 3424},
-{98 , 3416},
-{100 , 3408}      
-};     
+	{0 , 4186},
+	{0 , 4167},
+	{1 , 4152},
+	{2 , 4139},
+	{4 , 4126},
+	{5 , 4114},
+	{6 , 4102},
+	{7 , 4091},
+	{9 , 4079},
+	{10 , 4069},
+	{11 , 4058},
+	{12 , 4047},
+	{13 , 4037},
+	{15 , 4026},
+	{16 , 4015},
+	{17 , 4006},
+	{18 , 3997},
+	{20 , 3988},
+	{21 , 3979},
+	{22 , 3971},
+	{23 , 3963},
+	{24 , 3955},
+	{26 , 3947},
+	{27 , 3940},
+	{28 , 3932},
+	{29 , 3925},
+	{30 , 3918},
+	{32 , 3911},
+	{33 , 3904},
+	{34 , 3897},
+	{35 , 3890},
+	{37 , 3882},
+	{38 , 3874},
+	{39 , 3864},
+	{40 , 3854},
+	{41 , 3844},
+	{43 , 3835},
+	{44 , 3828},
+	{45 , 3822},
+	{46 , 3816},
+	{48 , 3812},
+	{49 , 3807},
+	{50 , 3803},
+	{51 , 3799},
+	{52 , 3795},
+	{54 , 3792},
+	{55 , 3789},
+	{56 , 3786},
+	{57 , 3783},
+	{59 , 3781},
+	{60 , 3778},
+	{61 , 3776},
+	{62 , 3774},
+	{63 , 3773},
+	{65 , 3771},
+	{66 , 3770},
+	{67 , 3768},
+	{68 , 3766},
+	{69 , 3764},
+	{71 , 3760},
+	{72 , 3757},
+	{73 , 3753},
+	{74 , 3748},
+	{76 , 3740},
+	{77 , 3730},
+	{78 , 3720},
+	{79 , 3710},
+	{80 , 3700},
+	{82 , 3690},
+	{83 , 3680},
+	{84 , 3680},
+	{85 , 3670},
+	{87 , 3660},
+	{88 , 3650},
+	{89 , 3640},
+	{90 , 3630},
+	{91 , 3620},
+	{93 , 3610},
+	{94 , 3600},
+	{95 , 3580},
+	{96 , 3560},
+	{98 , 3540},
+	{99 , 3461},
+	{100 , 3340},
+	{100 , 3274},
+	{101 , 3259},
+	{101 , 3253},
+	{101 , 3250},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247},
+	{101 , 3247}
+};
+
 
 // T3 50C
 BATTERY_PROFILE_STRUC battery_profile_t3[] =
 {
-	{0 , 4200},
-{1 , 4192},
-{2 , 4184},
-{3 , 4176},
-{4 , 4168},
-{5 , 4160},
-{6 , 4152},
-{7 , 4144},
-{8 , 4136},
-{9 , 4128},
-{10 , 4120},
-{11 , 4112},
-{12 , 4104},
-{13 , 4096},
-{14 , 4088},
-{15 , 4080},
-{16 , 4072},
-{17 , 4064},
-{18 , 4056},
-{19 , 4048},
-{20 , 4040},
-{21 , 4032},
-{22 , 4024},
-{23 , 4016},
-{24 , 4008},
-{25 , 4000},
-{26 , 3992},
-{27 , 3984},
-{28 , 3976},
-{29 , 3968},
-{30 , 3960},
-{31 , 3952},
-{32 , 3944},
-{33 , 3936},
-{34 , 3928},
-{35 , 3920},
-{36 , 3912},
-{37 , 3904},
-{38 , 3896},
-{39 , 3888},
-{40 , 3880},
-{41 , 3872},
-{42 , 3864},
-{43 , 3856},
-{44 , 3848},
-{45 , 3840},
-{46 , 3832},
-{47 , 3824},
-{48 , 3816},
-{49 , 3808},
-{50 , 3800},
-{51 , 3792},
-{52 , 3784},
-{53 , 3776},
-{54 , 3768},
-{55 , 3760},
-{56 , 3752},
-{57 , 3744},
-{58 , 3736},
-{59 , 3728},
-{60 , 3720},
-{61 , 3712},
-{62 , 3704},
-{63 , 3696},
-{64 , 3688},
-{65 , 3680},
-{66 , 3672},
-{67 , 3664},
-{68 , 3656},
-{69 , 3648},
-{70 , 3640},
-{71 , 3632},
-{72 , 3624},
-{73 , 3616},
-{74 , 3608},
-{75 , 3600},
-{76 , 3592},
-{77 , 3584},
-{78 , 3576},
-{79 , 3568},
-{80 , 3560},
-{81 , 3552},
-{82 , 3544},
-{83 , 3536},
-{84 , 3528},
-{85 , 3520},
-{86 , 3512},
-{87 , 3504},
-{88 , 3496},
-{89 , 3488},
-{90 , 3480},
-{91 , 3472},
-{92 , 3464},
-{93 , 3456},
-{94 , 3448},
-{95 , 3440},
-{96 , 3432},
-{97 , 3424},
-{98 , 3416},
-{100 , 3408}   
-};           
+	{0 , 4181},
+	{1 , 4167},
+	{3 , 4152},
+	{4 , 4139},
+	{5 , 4127},
+	{7 , 4114},
+	{8 , 4103},
+	{9 , 4090},
+	{11 , 4078},
+	{12 , 4067},
+	{13 , 4056},
+	{14 , 4049},
+	{16 , 4036},
+	{17 , 4022},
+	{18 , 4010},
+	{20 , 4001},
+	{21 , 3995},
+	{22 , 3986},
+	{24 , 3977},
+	{25 , 3969},
+	{26 , 3959},
+	{28 , 3952},
+	{29 , 3943},
+	{30 , 3935},
+	{31 , 3929},
+	{33 , 3920},
+	{34 , 3913},
+	{35 , 3906},
+	{37 , 3899},
+	{38 , 3893},
+	{39 , 3887},
+	{41 , 3879},
+	{42 , 3867},
+	{43 , 3851},
+	{45 , 3840},
+	{46 , 3833},
+	{47 , 3827},
+	{48 , 3820},
+	{50 , 3816},
+	{51 , 3812},
+	{52 , 3808},
+	{54 , 3803},
+	{55 , 3800},
+	{56 , 3797},
+	{58 , 3794},
+	{59 , 3791},
+	{60 , 3787},
+	{62 , 3785},
+	{63 , 3782},
+	{64 , 3779},
+	{66 , 3778},
+	{67 , 3776},
+	{68 , 3775},
+	{69 , 3772},
+	{71 , 3767},
+	{72 , 3759},
+	{73 , 3753},
+	{75 , 3751},
+	{76 , 3746},
+	{77 , 3742},
+	{79 , 3737},
+	{80 , 3732},
+	{81 , 3729},
+	{83 , 3724},
+	{84 , 3715},
+	{85 , 3708},
+	{86 , 3699},
+	{88 , 3689},
+	{89 , 3681},
+	{90 , 3680},
+	{92 , 3680},
+	{93 , 3678},
+	{94 , 3676},
+	{96 , 3664},
+	{97 , 3619},
+	{98 , 3553},
+	{100 , 3454},
+	{100 , 3279},
+	{100 , 3141},
+	{100 , 3081},
+	{100 , 3038},
+	{100 , 3012},
+	{100 , 2982},
+	{100 , 2976},
+	{100 , 2956},
+	{100 , 2947},
+	{100 , 2942},
+	{100 , 2936},
+	{100 , 2939},
+	{100 , 2926},
+	{100 , 2925},
+	{100 , 2922},
+	{100 , 2918},
+	{100 , 2910},
+	{100 , 2904},
+	{100 , 2897},
+	{100 , 2891},
+	{100 , 2881},
+	{100 , 2873},
+	{100 , 2876}
+};
+
+
+// R0 -10C
+R_PROFILE_STRUC r_profile_t0[] =
+{
+	{865 , 4098},
+	{865 , 4069},
+	{893 , 4053},
+	{915 , 4040},
+	{955 , 4023},
+	{1023 , 3997},
+	{1200 , 3961},
+	{1338 , 3946},
+	{1375 , 3938},
+	{1388 , 3932},
+	{1408 , 3926},
+	{1420 , 3918},
+	{1428 , 3910},
+	{1418 , 3901},
+	{1428 , 3894},
+	{1423 , 3885},
+	{1418 , 3874},
+	{1425 , 3866},
+	{1428 , 3856},
+	{1428 , 3846},
+	{1425 , 3838},
+	{1423 , 3830},
+	{1420 , 3823},
+	{1415 , 3817},
+	{1425 , 3814},
+	{1425 , 3808},
+	{1450 , 3806},
+	{1468 , 3803},
+	{1465 , 3801},
+	{1483 , 3798},
+	{1488 , 3795},
+	{1510 , 3796},
+	{1515 , 3795},
+	{1533 , 3792},
+	{1535 , 3792},
+	{1548 , 3790},
+	{1543 , 3789},
+	{1563 , 3787},
+	{1588 , 3785},
+	{1610 , 3783},
+	{1625 , 3781},
+	{1640 , 3776},
+	{1653 , 3772},
+	{1660 , 3767},
+	{1680 , 3763},
+	{1690 , 3758},
+	{1710 , 3751},
+	{1733 , 3742},
+	{1745 , 3734},
+	{1765 , 3725},
+	{1788 , 3719},
+	{1813 , 3715},
+	{1853 , 3712},
+	{1905 , 3707},
+	{1965 , 3702},
+	{2010 , 3696},
+	{2080 , 3678},
+	{2123 , 3647},
+	{2035 , 3612},
+	{1943 , 3575},
+	{1853 , 3537},
+	{1770 , 3502},
+	{1685 , 3472},
+	{1623 , 3443},
+	{1550 , 3419},
+	{1493 , 3395},
+	{1448 , 3373},
+	{1395 , 3357},
+	{1368 , 3341},
+	{1338 , 3328},
+	{1303 , 3317},
+	{1298 , 3307},
+	{1263 , 3300},
+	{1253 , 3293},
+	{1260 , 3288},
+	{1225 , 3283},
+	{1240 , 3275},
+	{1198 , 3271},
+	{1215 , 3267},
+	{1198 , 3260},
+	{1200 , 3256},
+	{1218 , 3251},
+	{1228 , 3243},
+	{1138 , 3239},
+	{1230 , 3233},
+	{1243 , 3225},
+	{1155 , 3218},
+	{1165 , 3214},
+	{1045 , 3209},
+	{1170 , 3202},
+	{1183 , 3196},
+	{1340 , 3185},
+	{1368 , 3171},
+	{1423 , 3157},
+	{1455 , 3142},
+	{1533 , 3125},
+	{1365 , 3114},
+	{1653 , 3095},
+	{1653 , 3095},
+	{1653 , 3095}
+};
+
+
+// R1 0C
+R_PROFILE_STRUC r_profile_t1[] =
+{
+	{633 , 4048},
+	{633 , 4008},
+	{678 , 3989},
+	{685 , 3977},
+	{700 , 3966},
+	{713 , 3960},
+	{728 , 3956},
+	{748 , 3951},
+	{753 , 3948},
+	{763 , 3941},
+	{763 , 3935},
+	{768 , 3928},
+	{783 , 3922},
+	{775 , 3914},
+	{780 , 3906},
+	{790 , 3898},
+	{790 , 3892},
+	{793 , 3882},
+	{798 , 3872},
+	{778 , 3860},
+	{778 , 3849},
+	{770 , 3839},
+	{778 , 3831},
+	{770 , 3824},
+	{785 , 3818},
+	{795 , 3815},
+	{785 , 3808},
+	{805 , 3805},
+	{810 , 3803},
+	{815 , 3798},
+	{818 , 3796},
+	{835 , 3793},
+	{838 , 3792},
+	{840 , 3790},
+	{865 , 3790},
+	{863 , 3788},
+	{880 , 3788},
+	{893 , 3787},
+	{908 , 3787},
+	{928 , 3785},
+	{933 , 3785},
+	{960 , 3784},
+	{965 , 3782},
+	{990 , 3779},
+	{1003 , 3777},
+	{1033 , 3774},
+	{1045 , 3769},
+	{1070 , 3766},
+	{1098 , 3762},
+	{1113 , 3756},
+	{1145 , 3748},
+	{1185 , 3742},
+	{1208 , 3734},
+	{1248 , 3724},
+	{1295 , 3714},
+	{1333 , 3708},
+	{1405 , 3703},
+	{1465 , 3701},
+	{1560 , 3699},
+	{1643 , 3696},
+	{1745 , 3689},
+	{1815 , 3662},
+	{1863 , 3601},
+	{1840 , 3533},
+	{1688 , 3475},
+	{1560 , 3418},
+	{1418 , 3363},
+	{1313 , 3315},
+	{1200 , 3270},
+	{1100 , 3238},
+	{1060 , 3208},
+	{980 , 3191},
+	{1000 , 3172},
+	{955 , 3159},
+	{878 , 3150},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137},
+	{960 , 3137}
+};
+
+
+// R2 25C
+R_PROFILE_STRUC r_profile_t2[] =
+{
+	{72 , 4186},
+	{72 , 4167},
+	{72 , 4152},
+	{73 , 4139},
+	{74 , 4126},
+	{74 , 4114},
+	{75 , 4102},
+	{75 , 4091},
+	{76 , 4079},
+	{77 , 4069},
+	{78 , 4058},
+	{79 , 4047},
+	{78 , 4037},
+	{80 , 4026},
+	{81 , 4015},
+	{82 , 4006},
+	{82 , 3997},
+	{84 , 3988},
+	{84 , 3979},
+	{85 , 3971},
+	{86 , 3963},
+	{88 , 3955},
+	{89 , 3947},
+	{91 , 3940},
+	{92 , 3932},
+	{94 , 3925},
+	{94 , 3918},
+	{98 , 3911},
+	{98 , 3904},
+	{99 , 3897},
+	{98 , 3890},
+	{97 , 3882},
+	{94 , 3874},
+	{90 , 3864},
+	{85 , 3854},
+	{81 , 3844},
+	{78 , 3835},
+	{76 , 3828},
+	{74 , 3822},
+	{73 , 3816},
+	{73 , 3812},
+	{73 , 3807},
+	{73 , 3803},
+	{72 , 3799},
+	{72 , 3795},
+	{73 , 3792},
+	{74 , 3789},
+	{73 , 3786},
+	{74 , 3783},
+	{75 , 3781},
+	{75 , 3778},
+	{76 , 3776},
+	{76 , 3774},
+	{77 , 3773},
+	{76 , 3771},
+	{76 , 3770},
+	{77 , 3768},
+	{76 , 3766},
+	{76 , 3764},
+	{73 , 3760},
+	{72 , 3757},
+	{72 , 3753},
+	{71 , 3748},
+	{70 , 3740},
+	{70 , 3730},
+	{70 , 3720},
+	{72 , 3710},
+	{72 , 3700},
+	{72 , 3690},
+	{72 , 3680},
+	{72 , 3680},
+	{73 , 3670},
+	{75 , 3660},
+	{73 , 3650},
+	{71 , 3640},
+	{74 , 3630},
+	{79 , 3620},
+	{84 , 3610},
+	{92 , 3600},
+	{91 , 3580},
+	{89 , 3560},
+	{95 , 3540},
+	{10 , 3461},
+	{12 , 3340},
+	{12 , 3274},
+	{10 , 3259},
+	{89 , 3253},
+	{85 , 3250},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247},
+	{81 , 3247}
+};
+
+
+// R3 50C
+R_PROFILE_STRUC r_profile_t3[] =
+{
+	{138 , 4181},
+	{138 , 4167},
+	{138 , 4152},
+	{140 , 4139},
+	{140 , 4127},
+	{143 , 4114},
+	{143 , 4103},
+	{143 , 4090},
+	{140 , 4078},
+	{143 , 4067},
+	{145 , 4056},
+	{155 , 4049},
+	{153 , 4036},
+	{155 , 4022},
+	{155 , 4010},
+	{155 , 4001},
+	{160 , 3995},
+	{163 , 3986},
+	{163 , 3977},
+	{170 , 3969},
+	{163 , 3959},
+	{173 , 3952},
+	{173 , 3943},
+	{175 , 3935},
+	{180 , 3929},
+	{178 , 3920},
+	{178 , 3913},
+	{180 , 3906},
+	{180 , 3899},
+	{190 , 3893},
+	{190 , 3887},
+	{190 , 3879},
+	{180 , 3867},
+	{158 , 3851},
+	{145 , 3840},
+	{143 , 3833},
+	{140 , 3827},
+	{138 , 3820},
+	{138 , 3816},
+	{143 , 3812},
+	{145 , 3808},
+	{145 , 3803},
+	{145 , 3800},
+	{150 , 3797},
+	{153 , 3794},
+	{153 , 3791},
+	{158 , 3787},
+	{155 , 3785},
+	{160 , 3782},
+	{160 , 3779},
+	{160 , 3778},
+	{163 , 3776},
+	{168 , 3775},
+	{163 , 3772},
+	{158 , 3767},
+	{148 , 3759},
+	{145 , 3753},
+	{150 , 3751},
+	{148 , 3746},
+	{150 , 3742},
+	{150 , 3737},
+	{148 , 3732},
+	{155 , 3729},
+	{158 , 3724},
+	{150 , 3715},
+	{155 , 3708},
+	{153 , 3699},
+	{150 , 3689},
+	{143 , 3681},
+	{150 , 3680},
+	{160 , 3680},
+	{168 , 3678},
+	{180 , 3676},
+	{180 , 3664},
+	{170 , 3619},
+	{188 , 3553},
+	{205 , 3454},
+	{300 , 3279},
+	{858 , 3141},
+	{783 , 3081},
+	{653 , 3038},
+	{530 , 3012},
+	{515 , 2982},
+	{458 , 2976},
+	{498 , 2956},
+	{475 , 2947},
+	{440 , 2942},
+	{425 , 2936},
+	{383 , 2939},
+	{415 , 2926},
+	{330 , 2925},
+	{320 , 2922},
+	{325 , 2918},
+	{385 , 2910},
+	{340 , 2904},
+	{353 , 2897},
+	{358 , 2891},
+	{365 , 2881},
+	{385 , 2873},
+	{320 , 2876}
+};
+
 
 // battery profile for actual temperature. The size should be the same as T1, T2 and T3
 BATTERY_PROFILE_STRUC battery_profile_temperature[] =
@@ -668,293 +1022,6 @@ BATTERY_PROFILE_STRUC battery_profile_temperature[] =
 // ============================================================
 // <Rbat, Battery_Voltage> Table
 // ============================================================
-// T0 -10C
-R_PROFILE_STRUC r_profile_t0[] =
-{
-	{394  , 4175},
-	{394  , 4157},
-	{400  , 4141},
-	{404  , 4126},
-	{409  , 4112},
-	{414  , 4100},
-	{421  , 4090},
-	{429  , 4081},
-	{433  , 4068},
-	{424  , 4045},
-	{412  , 4021},
-	{411  , 4000},
-	{413  , 3984},
-	{416  , 3971},
-	{418  , 3961},
-	{416  , 3951},
-	{413  , 3941},
-	{410  , 3932},
-	{408  , 3923},
-	{405  , 3913},
-	{402  , 3903},
-	{399  , 3893},
-	{398  , 3884},
-	{399  , 3875},
-	{400  , 3867},
-	{401  , 3859},
-	{404  , 3852},
-	{406  , 3845},
-	{409  , 3839},
-	{412  , 3833},
-	{415  , 3827},
-	{418  , 3822},
-	{423  , 3817},
-	{426  , 3811},
-	{431  , 3807},
-	{435  , 3802},
-	{438  , 3798},
-	{442  , 3794},
-	{445  , 3790},
-	{450  , 3786},
-	{453  , 3783},
-	{458  , 3779},
-	{461  , 3776},
-	{465  , 3772},
-	{470  , 3768},
-	{474  , 3763},
-	{479  , 3759},
-	{486  , 3754},
-	{492  , 3749},
-	{499  , 3744},
-	{507  , 3739},
-	{515  , 3734},
-	{524  , 3730},
-	{534  , 3725},
-	{547  , 3721},
-	{563  , 3718},
-	{583  , 3715},
-	{610  , 3712},
-	{645  , 3708},
-	{686  , 3702},
-	{734  , 3691},
-	{788  , 3673},
-	{851  , 3647},
-	{929  , 3612},
-	{1026 , 3563},
-	{1150 , 3516},
-	{1085 , 3400}
-};      
-
-// T1 0C
-R_PROFILE_STRUC r_profile_t1[] =
-{
-	{225  , 4190},
-	{249  , 4168},
-	{251  , 4152},
-	{253  , 4136},
-	{256  , 4121},
-	{259  , 4107},
-	{261  , 4094},
-	{268  , 4085},
-	{278  , 4076},
-	{283  , 4061},
-	{280  , 4037},
-	{279  , 4015},
-	{279  , 3998},
-	{282  , 3986},
-	{283  , 3977},
-	{283  , 3969},
-	{283  , 3960},
-	{282  , 3951},
-	{281  , 3942},
-	{278  , 3932},
-	{275  , 3920},
-	{271  , 3909},
-	{267  , 3898},
-	{264  , 3887},
-	{261  , 3876},
-	{259  , 3867},
-	{257  , 3858},
-	{256  , 3849},
-	{256  , 3842},
-	{256  , 3835},
-	{257  , 3828},
-	{258  , 3823},
-	{260  , 3817},
-	{262  , 3812},
-	{264  , 3808},
-	{266  , 3803},
-	{268  , 3799},
-	{271  , 3796},
-	{273  , 3792},
-	{276  , 3789},
-	{279  , 3786},
-	{281  , 3784},
-	{283  , 3782},
-	{286  , 3779},
-	{288  , 3777},
-	{291  , 3774},
-	{294  , 3771},
-	{298  , 3767},
-	{302  , 3763},
-	{306  , 3759},
-	{310  , 3754},
-	{314  , 3748},
-	{319  , 3743},
-	{324  , 3736},
-	{326  , 3729},
-	{328  , 3721},
-	{330  , 3714},
-	{337  , 3709},
-	{352  , 3705},
-	{377  , 3702},
-	{414  , 3698},
-	{464  , 3690},
-	{505  , 3667},
-	{546  , 3618},
-	{631  , 3542},
-	{800  , 3415},
-	{800  , 3415}    
-};     
-
-// T2 25C
-R_PROFILE_STRUC r_profile_t2[] =
-{
-	{108  , 4191},
-	{108  , 4171},
-	{108  , 4152},
-	{107  , 4136},
-	{108  , 4121},
-	{110  , 4106},
-	{110  , 4091},
-	{110  , 4078},
-	{112  , 4068},
-	{113  , 4055},
-	{115  , 4040},
-	{113  , 4024},
-	{117  , 4011},
-	{118  , 3999},
-	{120  , 3988},
-	{122  , 3979},
-	{122  , 3970},
-	{123  , 3960},
-	{127  , 3951},
-	{128  , 3941},
-	{132  , 3932},
-	{133  , 3923},
-	{137  , 3914},
-	{140  , 3906},
-	{138  , 3896},
-	{138  , 3886},
-	{135  , 3875},
-	{130  , 3864},
-	{125  , 3852},
-	{120  , 3842},
-	{115  , 3832},
-	{113  , 3825},
-	{113  , 3818},
-	{113  , 3812},
-	{113  , 3807},
-	{112  , 3802},
-	{112  , 3797},
-	{113  , 3793},
-	{115  , 3790},
-	{115  , 3786},
-	{117  , 3784},
-	{118  , 3781},
-	{122  , 3779},
-	{122  , 3776},
-	{127  , 3775},
-	{127  , 3773},
-	{127  , 3770},
-	{123  , 3767},
-	{120  , 3763},
-	{120  , 3758},
-	{118  , 3752},
-	{117  , 3746},
-	{118  , 3741},
-	{120  , 3735},
-	{120  , 3727},
-	{122  , 3718},
-	{122  , 3709},
-	{120  , 3697},
-	{115  , 3689},
-	{120  , 3687},
-	{125  , 3686},
-	{132  , 3683},
-	{138  , 3676},
-	{132  , 3631},
-	{138  , 3555},
-	{153  , 3442},
-	{153  , 3442}    
-}; 
-
-// T3 50C
-R_PROFILE_STRUC r_profile_t3[] =
-{
-	{110  , 4190},
-	{249  , 4168},
-	{251  , 4152},
-	{253  , 4136},
-	{256  , 4121},
-	{259  , 4107},
-	{261  , 4094},
-	{268  , 4085},
-	{278  , 4076},
-	{283  , 4061},
-	{280  , 4037},
-	{279  , 4015},
-	{279  , 3998},
-	{282  , 3986},
-	{283  , 3977},
-	{283  , 3969},
-	{283  , 3960},
-	{282  , 3951},
-	{281  , 3942},
-	{278  , 3932},
-	{275  , 3920},
-	{271  , 3909},
-	{267  , 3898},
-	{264  , 3887},
-	{261  , 3876},
-	{259  , 3867},
-	{257  , 3858},
-	{256  , 3849},
-	{256  , 3842},
-	{256  , 3835},
-	{257  , 3828},
-	{258  , 3823},
-	{260  , 3817},
-	{262  , 3812},
-	{264  , 3808},
-	{266  , 3803},
-	{268  , 3799},
-	{271  , 3796},
-	{273  , 3792},
-	{276  , 3789},
-	{279  , 3786},
-	{281  , 3784},
-	{283  , 3782},
-	{286  , 3779},
-	{288  , 3777},
-	{291  , 3774},
-	{294  , 3771},
-	{298  , 3767},
-	{302  , 3763},
-	{306  , 3759},
-	{310  , 3754},
-	{314  , 3748},
-	{319  , 3743},
-	{324  , 3736},
-	{326  , 3729},
-	{328  , 3721},
-	{330  , 3714},
-	{337  , 3709},
-	{352  , 3705},
-	{377  , 3702},
-	{414  , 3698},
-	{464  , 3690},
-	{505  , 3667},
-	{546  , 3618},
-	{631  , 3542},
-	{800  , 3415},
-	{800  , 3415}  
-}; 
 
 // r-table profile for actual temperature. The size should be the same as T1, T2 and T3
 R_PROFILE_STRUC r_profile_temperature[] =
diff --git a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_charging.h b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_charging.h
index 58b7325..b2ef921 100644
--- a/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_charging.h
+++ b/drivers/misc/mediatek/mach/mt6735/benefit_m7/power/cust_charging.h
@@ -63,7 +63,7 @@
 //#define BATTERY_NOTIFY_CASE_0005_TOTAL_CHARGINGTIME
 
 /* High battery support */
-#define HIGH_BATTERY_VOLTAGE_SUPPORT
+//#define HIGH_BATTERY_VOLTAGE_SUPPORT
 
 /* JEITA parameter */
 //#define MTK_JEITA_STANDARD_SUPPORT
diff --git a/drivers/power/mediatek/battery_meter.c b/drivers/power/mediatek/battery_meter.c
index a682c88..b935f4d 100755
--- a/drivers/power/mediatek/battery_meter.c
+++ b/drivers/power/mediatek/battery_meter.c
@@ -1319,9 +1319,7 @@ void dod_init(void)
 	kal_int32 gFG_capacity_by_sw_ocv = gFG_capacity_by_v;	
 #endif//by zhu
 
-#if defined(IS_BATTERY_REMOVE_BY_PMIC)
-	kal_int32 gFG_capacity_by_sw_ocv = gFG_capacity_by_v;	
-#endif
+
 #if defined(SOC_BY_HW_FG)
 	int ret = 0;
 
diff --git a/include/generated/compile.h b/include/generated/compile.h
index ee10182..a800b3c 100644
--- a/include/generated/compile.h
+++ b/include/generated/compile.h
@@ -1,7 +1,7 @@
-/* This file is auto generated, version 13 */
+/* This file is auto generated, version 18 */
 /* SMP PREEMPT */
 #define UTS_MACHINE "arm64"
-#define UTS_VERSION "#13 SMP PREEMPT Wed May 4 20:18:32 MSK 2016"
+#define UTS_VERSION "#18 SMP PREEMPT Fri May 6 22:10:17 MSK 2016"
 #define LINUX_COMPILE_BY "olegsvs"
 #define LINUX_COMPILE_HOST "olegsvs-develop"
 #define LINUX_COMPILER "gcc version 4.9 20150123 (prerelease) (GCC) "
-- 
2.7.4

